$schema: >-
  https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#
contentVersion: 1.0.0.0
parameters:
  environment_code:
    type: String
    metadata:
      description: >-
        Suffix added to all resource name to make them unique. Should consist of
        only lower case alphabet and numbers. Total length should be less than 6
        characters.
  sql_administrator_login_password:
    type: SecureString
    metadata:
      description: >-
        Password for SQL Admin. Should have atleast one capital, one small
        alphapbet with one digit and one special character.Password should be at
        least 8 characters long.
  pbi_workspace_id:
    type: String
    metadata:
      description: PowerBi workspace Id.
  powerbi_streaming_dataset_url_healthcare:
    type: String
    metadata:
      description: PowerBi streaming dataset URL.
  virtual_machine_password:
    type: SecureString
    metadata:
      description: >-
        Password for VM(high speed data generator). Should have atleast one
        capital, one small alphapbet with one digit and one special
        character.Password should be at least 8 characters long.
variables:
  resource_group_name: '[resourceGroup().name]'
  unique_suffix: >-
    [concat(uniqueString(deployment().name), '-',
    parameters('environment_code'))]
  location: '[resourceGroup().location]'
  source_storage_container: healthcare-assets
  cosmos_account_name_healthcare: >-
    [if(greater(length(concat('cosmosdb-healthcare-',
    uniqueString(deployment().name),parameters('environment_code'))), 43),
    substring(concat('cosmosdb-healthcare-',
    uniqueString(deployment().name),parameters('environment_code')),0,43) ,
    concat('cosmosdb-healthcare-',
    uniqueString(deployment().name),parameters('environment_code')) )]
  cosmos_database_name_healthcare: healthcare
  cosmos_database_container_name_iomtdata: IoMTData
  cosmos_database_container_name_livedatastream: LiveDataStream
  cosmos_database_container_name_streamingdata: StreamingData
  cosmos_database_container_name_synapselinklabdata: SynapseLinkLabData
  cosmos_mongodb_account_name_healthcare: >-
    [if(greater(length(concat('cosmos-healthcare-mongodb-',
    uniqueString(deployment().name),parameters('environment_code'))), 43),
    substring(concat('cosmos-healthcare-mongodb-',
    uniqueString(deployment().name),parameters('environment_code')),0,43) ,
    concat('cosmos-healthcare-mongodb-',
    uniqueString(deployment().name),parameters('environment_code')) )]
  cosmos_mongodb_database_name_healthcare: healthdata
  cosmos_mongodb_container_name_iomtdata: IoMTData
  cosmos_mongodb_container_name_synapselinklabdata: SynapseLinkLabData
  eventhub_evh_namespace_healthcare_name: '[concat(''evh-namespace-'',variables(''unique_suffix''))]'
  eventhub_evh_ns_high_speed_datagen_healthcare_name: '[concat(''evh-highspeed-'',variables(''unique_suffix''))]'
  storage_account_healthcare_name: >-
    [if(greater(length(concat('sthealthcare',
    parameters('environment_code'),uniqueString(deployment().name))), 24),
    substring(concat('sthealthcare',parameters('environment_code'),uniqueString(deployment().name)),0,24)
    ,
    concat('sthealthcare',parameters('environment_code'),uniqueString(deployment().name))
    )]
  asa_healthcare_name: '[concat(''asa-healthcare-'',variables(''unique_suffix''))]'
  asa_healthcare_query: >-
    WITH ReaderQuery AS ( SELECT numberOfSteps, heartRate, systolicPressure,
    diastolicPressure, calories, EventProcessedUtcTime, EventEnqueuedUtcTime,
    patientId, patientAge, datetime, bodyTemperature, breathingRate, spo2,
    activityTime, numberOfTimesPersonStoodUp, vo2, PatientId + '_' +
    SUBSTRING(REPLACE(EventEnqueuedUtcTime, '-', '_'), 1, 10)
    SyntheticPartitionKey FROM [evh-iomt-in] WHERE [patientId] =
    '0058a52a-235c-11eb-be74-70b5e8b8edbb' ) 
      SELECT [numberOfSteps], [heartrate], [systolicPressure], [diastolicPressure], [calories] INTO [streamingpatient-out] FROM [ReaderQuery] 
     SELECT [heartrate], [systolicPressure], [diastolicPressure], [spo2], [datetime], [EventProcessedUtcTime], [EventEnqueuedUtcTime] INTO [powerbi-out] FROM [ReaderQuery]
  asa_high_speed_data_gen_healthcare_name: '[concat(''asa-high-speed-datagen-healthcare-'',variables(''unique_suffix''))]'
  asa_high_speed_data_gen_healthcare_query: >-
    WITH Input AS( SELECT * FROM [evh-high-speed-datagen-healthcare] Partition
    By PartitionId ) 
     SELECT * INTO HighSpeedStreamingRaw FROM Input Partition By PartitionId 
     SELECT Dspl, avg(temp) as AvgTemp, max(hmdt) as MaxHmdt, PartitionId INTO HighSpeedStreamingAggregate FROM Input PARTITION BY PartitionID GROUP BY TumblingWindow(second, 1), Dspl, PartitionId
  workspace_name_synapsehealthcare: >-
    [concat('synapsehealthcare',parameters('environment_code'),uniqueString(deployment().name))]
  default_data_lake_storage_file_system_name: tempdata
  default_data_lake_storage_account_url: >-
    [concat('https://', variables('storage_account_healthcare_name'),
    '.dfs.core.windows.net')]
  sql_compute_name: HealthCareDW
  sql_administrator_login_id: labsqladmin
  spark_compute_name: HealthCare
  sql_server_sku: DW100c
  spark_auto_scale_enabled: 'true'
  spark_min_node_count: '3'
  spark_max_node_count: '20'
  spark_node_count: '1'
  spark_node_size_family: MemoryOptimized
  spark_node_size: Large
  spark_auto_pause_enabled: 'true'
  spark_auto_pause_delay_in_minutes: '5'
  spark_version: '2.4'
  packages_requirements_file_name: requirements.txt
  packages_requirements_content: |-
    seaborn==0.10.1
    xgboost==1.0.2
    onnxruntime==1.0.0
    werkzeug==0.16.1
    nimbusml==1.7.1
    ruamel.yaml==0.16.9
    azureml-train-automl-runtime==1.6.0
    scikit-learn==0.20.3
    numpy==1.16.2
    pandas==0.23.4
    scipy==1.4.1
  func_iomt_processor_asp_name: '[concat(''func-asp-iomt-processor-'',variables(''unique_suffix''))]'
  func_iomt_processor_storage_name: >-
    [if(greater(length(concat('stiomtdataprocessor',
    parameters('environment_code'),uniqueString(deployment().name))), 24),
    substring(concat('stiomtdataprocessor',parameters('environment_code'),uniqueString(deployment().name)),0,24)
    ,
    concat('stiomtdataprocessor',parameters('environment_code'),uniqueString(deployment().name))
    )]
  func_iomt_processor_app_name: '[concat(''func-app-iomt-processor-'',variables(''unique_suffix''))]'
  func_formrecognizer_asp_name: '[concat(''func-asp-formrecognizer-'',variables(''unique_suffix''))]'
  func_formrecognizer_ai_name: '[concat(''func-appi-formrecognizer-'',variables(''unique_suffix''))]'
  func_formrecognizer_storage_name: >-
    [if(greater(length(concat('stformrecognizer',
    parameters('environment_code'),uniqueString(deployment().name))), 24),
    substring(concat('stformrecognizer',parameters('environment_code'),uniqueString(deployment().name)),0,24)
    ,
    concat('stformrecognizer',parameters('environment_code'),uniqueString(deployment().name))
    )]
  func_formrecognizer_app_name: '[concat(''func-app-formrecognizer-'',variables(''unique_suffix''))]'
  func_mongo_data_asp_name: '[concat(''func-asp-mongo-data-'',variables(''unique_suffix''))]'
  func_mongo_data_storage_name: >-
    [if(greater(length(concat('stmongodata',
    parameters('environment_code'),uniqueString(deployment().name))), 24),
    substring(concat('stmongodata',parameters('environment_code'),uniqueString(deployment().name)),0,24)
    ,
    concat('stmongodata',parameters('environment_code'),uniqueString(deployment().name))
    )]
  func_mongo_data_app_name: '[concat(''func-app-mongo-data-'',variables(''unique_suffix''))]'
  app_demohealthcare_ase_name: '[concat(''app-asp-demohealthcare-'',variables(''unique_suffix''))]'
  app_demohealthcare_app_service_name: '[concat(''app-demohealthcare-'',variables(''unique_suffix''))]'
  app_healthcaresearch_ase_name: '[concat(''app-asp-healthcaresearch-'',variables(''unique_suffix''))]'
  app_healthcaresearch_app_service_name: '[concat(''app-healthcaresearch-'',variables(''unique_suffix''))]'
  app_iomt_simulator_ase_name: '[concat(''app-asp-iomt-simulator-'',variables(''unique_suffix''))]'
  app_iomt_simulator_app_service_name: '[concat(''app-iomt-simulator-'',variables(''unique_suffix''))]'
  cogs_forms_name: '[concat(''cog-formrecognition-'',variables(''unique_suffix''))]'
  cogs_formsv2_name: '[concat(''cog-formrecognitionv2-'',variables(''unique_suffix''))]'
  cognitive_healthcare_services_name: '[concat(''cog-healthcare-'',parameters(''environment_code''))]'
  accounts_healthcareTA_name: '[concat(''healthcareTA-'',variables(''unique_suffix''))]'
  accounts_ta_healthcare_analytics_name: '[concat(''ta-healthcare-analytics-'',variables(''unique_suffix''))]'
  storage_account_covid19_search_name: >-
    [if(greater(length(concat('stcovid19search',
    parameters('environment_code'),uniqueString(deployment().name))), 24),
    substring(concat('stcovid19search',parameters('environment_code'),uniqueString(deployment().name)),0,24)
    ,
    concat('stcovid19search',parameters('environment_code'),uniqueString(deployment().name))
    )]
  search_covid_search_name: '[concat(''srch-covidsearch-'',variables(''unique_suffix''))]'
  search_healthcare_demo_name: '[concat(''srch-healthcaredemo-'',variables(''unique_suffix''))]'
  iot_central_healthcare_name: '[concat(''iotctrl-healthcare-'',variables(''unique_suffix''))]'
  key_vault_name: '[concat(''kv-'',parameters(''environment_code''))]'
  virtual_machine_nic_name: >-
    [if(greater(length(concat('datavmnic',parameters('environment_code'),
    uniqueString(deployment().name))), 14), substring(concat('datavmnic',
    parameters('environment_code'),uniqueString(deployment().name)),0,14) ,
    concat('datavmnic',parameters('environment_code'),
    uniqueString(deployment().name)) )]
  virtual_machine_name: >-
    [if(greater(length(concat('datavm-',parameters('environment_code'),
    uniqueString(deployment().name))), 14), substring(concat('data-gen-',
    parameters('environment_code'),uniqueString(deployment().name)),0,14) ,
    concat('data-gen-',parameters('environment_code'),
    uniqueString(deployment().name)) )]
  virtual_machine_username: data-generator
  virtual_machine_password: '[parameters(''virtual_machine_password'')]'
  virtual_machine_size: Standard_B4ms
  virtual_machine_vnet_subnet_name: datavmsubnet
  virtual_machine_nsg_name: >-
    [if(greater(length(concat('datavmnsg',parameters('environment_code'),
    uniqueString(deployment().name))), 14), substring(concat('datavmnsg',
    parameters('environment_code'),uniqueString(deployment().name)),0,14) ,
    concat('datavmnsg',parameters('environment_code'),
    uniqueString(deployment().name)) )]
  virtual_machine_public_ip_name: >-
    [if(greater(length(concat('datavmip',parameters('environment_code'),
    uniqueString(deployment().name))), 14), substring(concat('datavmip',
    parameters('environment_code'),uniqueString(deployment().name)),0,14) ,
    concat('datavmip',parameters('environment_code'),
    uniqueString(deployment().name)) )]
  virtual_machine_vnet_name: >-
    [if(greater(length(concat('datavmvnet',parameters('environment_code'),
    uniqueString(deployment().name))), 14), substring(concat('datavmvnet',
    parameters('environment_code'),uniqueString(deployment().name)),0,14) ,
    concat('datavmvnet',parameters('environment_code'),
    uniqueString(deployment().name)) )]
  virtual_machine_vnet_address_prefix: 10.0.0.0/16
  script_args: >-
    [concat(' -eventhub_evh_ns_high_speed_datagen_name
    ',variables('eventhub_evh_ns_high_speed_datagen_healthcare_name'), ' -rgName
    ', variables('resource_group_name'), ' -evh_highe_speed_cs ')]
resources:
  - name: default
    type: Microsoft.Resources/tags
    apiVersion: '2019-10-01'
    properties:
      tags:
        DeploymentId: '[parameters(''environment_code'')]'
        UniqueId: '[uniqueString(deployment().name)]'
        WsId: '[parameters(''pbi_workspace_id'')]'
        PbiDatasetUrl: '[parameters(''powerbi_streaming_dataset_url_healthcare'')]'
  - name: '[toLower(variables(''cosmos_account_name_healthcare''))]'
    type: Microsoft.DocumentDB/databaseAccounts
    apiVersion: '2019-12-12'
    location: '[variables(''location'')]'
    kind: GlobalDocumentDB
    properties:
      consistencyPolicy:
        defaultConsistencyLevel: Eventual
      locations:
        - locationName: '[variables(''location'')]'
      databaseAccountOfferType: Standard
      enableAnalyticalStorage: true
      publicNetworkAccess: Enabled
      ipRangeFilter: 0.0.0.0
  - name: >-
      [concat(variables('cosmos_account_name_healthcare'), '/',
      toLower(variables('cosmos_database_name_healthcare')))]
    type: Microsoft.DocumentDB/databaseAccounts/sqlDatabases
    apiVersion: '2019-12-12'
    dependsOn:
      - >-
        [concat('Microsoft.DocumentDB/databaseAccounts/',
        toLower(variables('cosmos_account_name_healthcare')))]
    properties:
      resource:
        id: '[variables(''cosmos_database_name_healthcare'')]'
  - name: >-
      [concat(variables('cosmos_account_name_healthcare'), '/',
      variables('cosmos_database_name_healthcare'), '/',
      variables('cosmos_database_container_name_iomtdata'))]
    type: Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers
    apiVersion: '2020-04-01'
    location: '[variables(''location'')]'
    dependsOn:
      - >-
        [resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases',variables('cosmos_account_name_healthcare'),variables('cosmos_database_name_healthcare'))]
    properties:
      resource:
        id: '[variables(''cosmos_database_container_name_iomtdata'')]'
        indexingPolicy:
          automatic: true
          indexingMode: consistent
          includedPaths:
            - path: /*
          excludedPaths:
            - path: /"_etag"/?
        partitionKey:
          paths:
            - /SyntheticPartitionKey
          kind: Hash
        analyticalStorageTtl: -1
        conflictResolutionPolicy:
          mode: LastWriterWins
          conflictResolutionPath: /_ts
      options:
        autoscaleSettings:
          maxThroughput: '4000'
  - name: >-
      [concat(variables('cosmos_account_name_healthcare'), '/',
      variables('cosmos_database_name_healthcare'), '/',
      variables('cosmos_database_container_name_livedatastream'))]
    type: Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers
    apiVersion: '2020-04-01'
    location: '[variables(''location'')]'
    dependsOn:
      - >-
        [resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases',variables('cosmos_account_name_healthcare'),variables('cosmos_database_name_healthcare'))]
    properties:
      resource:
        id: '[variables(''cosmos_database_container_name_livedatastream'')]'
        indexingPolicy:
          automatic: true
          indexingMode: consistent
          includedPaths:
            - path: /*
          excludedPaths:
            - path: /"_etag"/?
        partitionKey:
          paths:
            - /SyntheticPartitionKey
          kind: Hash
        analyticalStorageTtl: -1
        conflictResolutionPolicy:
          mode: LastWriterWins
          conflictResolutionPath: /_ts
      options:
        autoscaleSettings:
          maxThroughput: '4000'
  - name: >-
      [concat(variables('cosmos_account_name_healthcare'), '/',
      variables('cosmos_database_name_healthcare'), '/',
      variables('cosmos_database_container_name_streamingdata'))]
    type: Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers
    apiVersion: '2020-04-01'
    location: '[variables(''location'')]'
    dependsOn:
      - >-
        [resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases',variables('cosmos_account_name_healthcare'),variables('cosmos_database_name_healthcare'))]
    properties:
      resource:
        id: '[variables(''cosmos_database_container_name_streamingdata'')]'
        indexingPolicy:
          automatic: true
          indexingMode: consistent
          includedPaths:
            - path: /*
          excludedPaths:
            - path: /"_etag"/?
        partitionKey:
          paths:
            - /SyntheticPartitionKey
          kind: Hash
        analyticalStorageTtl: -1
        conflictResolutionPolicy:
          mode: LastWriterWins
          conflictResolutionPath: /_ts
      options:
        autoscaleSettings:
          maxThroughput: '4000'
  - name: >-
      [concat(variables('cosmos_account_name_healthcare'), '/',
      variables('cosmos_database_name_healthcare'), '/',
      variables('cosmos_database_container_name_synapselinklabdata'))]
    type: Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers
    apiVersion: '2020-04-01'
    location: '[variables(''location'')]'
    dependsOn:
      - >-
        [resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases',variables('cosmos_account_name_healthcare'),variables('cosmos_database_name_healthcare'))]
    properties:
      resource:
        id: '[variables(''cosmos_database_container_name_synapselinklabdata'')]'
        indexingPolicy:
          automatic: true
          indexingMode: consistent
          includedPaths:
            - path: /*
          excludedPaths:
            - path: /"_etag"/?
        partitionKey:
          paths:
            - /SyntheticPartitionKey
          kind: Hash
        analyticalStorageTtl: -1
        conflictResolutionPolicy:
          mode: LastWriterWins
          conflictResolutionPath: /_ts
      options:
        autoscaleSettings:
          maxThroughput: '4000'
  - name: '[variables(''cosmos_mongodb_account_name_healthcare'')]'
    type: Microsoft.DocumentDB/databaseAccounts
    apiVersion: 2020-06-01-preview
    location: '[variables(''location'')]'
    kind: MongoDB
    identity:
      type: None
    properties:
      publicNetworkAccess: Enabled
      enableAutomaticFailover: false
      enableMultipleWriteLocations: false
      isVirtualNetworkFilterEnabled: false
      virtualNetworkRules: []
      disableKeyBasedMetadataWriteAccess: false
      enableFreeTier: false
      enableAnalyticalStorage: true
      createMode: Default
      databaseAccountOfferType: Standard
      consistencyPolicy:
        defaultConsistencyLevel: Session
        maxIntervalInSeconds: 5
        maxStalenessPrefix: 100
      apiProperties:
        serverVersion: '3.6'
      locations:
        - locationName: '[variables(''location'')]'
          provisioningState: Succeeded
          failoverPriority: 0
          isZoneRedundant: false
      cors: []
      capabilities:
        - name: EnableMongo
        - name: DisableRateLimitingResponses
      ipRules: []
      backupPolicy:
        type: Periodic
        periodicModeProperties:
          backupIntervalInMinutes: 240
          backupRetentionIntervalInHours: 8
  - name: >-
      [concat(variables('cosmos_mongodb_account_name_healthcare'),
      '/',variables('cosmos_mongodb_database_name_healthcare'))]
    type: Microsoft.DocumentDB/databaseAccounts/mongodbDatabases
    apiVersion: 2020-06-01-preview
    dependsOn:
      - >-
        [resourceId('Microsoft.DocumentDB/databaseAccounts',
        variables('cosmos_mongodb_account_name_healthcare'))]
    properties:
      resource:
        id: '[variables(''cosmos_mongodb_database_name_healthcare'')]'
  - name: >-
      [concat(variables('cosmos_mongodb_account_name_healthcare'), '/',
      variables('cosmos_mongodb_database_name_healthcare'), '/',
      variables('cosmos_mongodb_container_name_iomtdata'))]
    type: Microsoft.DocumentDB/databaseAccounts/mongodbDatabases/collections
    apiVersion: 2020-06-01-preview
    dependsOn:
      - >-
        [resourceId('Microsoft.DocumentDB/databaseAccounts/mongodbDatabases',
        variables('cosmos_mongodb_account_name_healthcare'),
        variables('cosmos_mongodb_database_name_healthcare'))]
      - >-
        [resourceId('Microsoft.DocumentDB/databaseAccounts',
        variables('cosmos_mongodb_account_name_healthcare'))]
    properties:
      resource:
        id: '[variables(''cosmos_mongodb_container_name_iomtdata'')]'
        analyticalStorageTtl: -1
        shardKey:
          SyntheticPartitionKey: Hash
        indexes:
          - key:
              keys:
                - _id
      options:
        throughput: '400'
  - name: >-
      [concat(variables('cosmos_mongodb_account_name_healthcare'), '/',
      variables('cosmos_mongodb_database_name_healthcare'), '/',
      variables('cosmos_mongodb_container_name_synapselinklabdata'))]
    type: Microsoft.DocumentDB/databaseAccounts/mongodbDatabases/collections
    apiVersion: 2020-06-01-preview
    dependsOn:
      - >-
        [resourceId('Microsoft.DocumentDB/databaseAccounts/mongodbDatabases',
        variables('cosmos_mongodb_account_name_healthcare'),
        variables('cosmos_mongodb_database_name_healthcare'))]
      - >-
        [resourceId('Microsoft.DocumentDB/databaseAccounts',
        variables('cosmos_mongodb_account_name_healthcare'))]
    properties:
      resource:
        id: '[variables(''cosmos_mongodb_container_name_synapselinklabdata'')]'
        analyticalStorageTtl: -1
        shardKey:
          SyntheticPartitionKey: Hash
        indexes:
          - key:
              keys:
                - _id
      options:
        autoscaleSettings:
          maxThroughput: '4000'
  - name: '[variables(''eventhub_evh_namespace_healthcare_name'')]'
    type: Microsoft.EventHub/namespaces
    apiVersion: 2018-01-01-preview
    location: '[variables(''location'')]'
    sku:
      name: Standard
      tier: Standard
      capacity: 1
    properties:
      zoneRedundant: false
      isAutoInflateEnabled: false
      maximumThroughputUnits: 0
      kafkaEnabled: true
  - name: >-
      [concat(variables('eventhub_evh_namespace_healthcare_name'),
      '/RootManageSharedAccessKey')]
    type: Microsoft.EventHub/namespaces/AuthorizationRules
    apiVersion: '2017-04-01'
    location: '[variables(''location'')]'
    dependsOn:
      - >-
        [resourceId('Microsoft.EventHub/namespaces',
        variables('eventhub_evh_namespace_healthcare_name'))]
    properties:
      rights:
        - Listen
        - Manage
        - Send
  - name: >-
      [concat(variables('eventhub_evh_namespace_healthcare_name'),
      '/evh-iomtconnector-dev')]
    type: Microsoft.EventHub/namespaces/eventhubs
    apiVersion: '2017-04-01'
    location: '[variables(''location'')]'
    dependsOn:
      - >-
        [resourceId('Microsoft.EventHub/namespaces',
        variables('eventhub_evh_namespace_healthcare_name'))]
    properties:
      messageRetentionInDays: 1
      partitionCount: 4
      status: Active
  - name: '[concat(variables(''eventhub_evh_namespace_healthcare_name''), ''/default'')]'
    type: Microsoft.EventHub/namespaces/networkRuleSets
    apiVersion: 2018-01-01-preview
    location: '[variables(''location'')]'
    dependsOn:
      - >-
        [resourceId('Microsoft.EventHub/namespaces',
        variables('eventhub_evh_namespace_healthcare_name'))]
    properties:
      defaultAction: Deny
      virtualNetworkRules: []
      ipRules: []
  - name: >-
      [concat(variables('eventhub_evh_namespace_healthcare_name'),
      '/evh-iomtconnector-dev/$Default')]
    type: Microsoft.EventHub/namespaces/eventhubs/consumergroups
    apiVersion: '2017-04-01'
    location: '[variables(''location'')]'
    dependsOn:
      - >-
        [resourceId('Microsoft.EventHub/namespaces/eventhubs',
        variables('eventhub_evh_namespace_healthcare_name'),
        'evh-iomtconnector-dev')]
      - >-
        [resourceId('Microsoft.EventHub/namespaces',
        variables('eventhub_evh_namespace_healthcare_name'))]
    properties: {}
  - name: >-
      [concat(variables('eventhub_evh_namespace_healthcare_name'),
      '/evh-iomtconnector-dev/asa-cg')]
    type: Microsoft.EventHub/namespaces/eventhubs/consumergroups
    apiVersion: '2017-04-01'
    location: '[variables(''location'')]'
    dependsOn:
      - >-
        [resourceId('Microsoft.EventHub/namespaces/eventhubs',
        variables('eventhub_evh_namespace_healthcare_name'),
        'evh-iomtconnector-dev')]
      - >-
        [resourceId('Microsoft.EventHub/namespaces',
        variables('eventhub_evh_namespace_healthcare_name'))]
    properties: {}
  - name: '[variables(''eventhub_evh_ns_high_speed_datagen_healthcare_name'')]'
    type: Microsoft.EventHub/namespaces
    apiVersion: 2018-01-01-preview
    location: '[variables(''location'')]'
    sku:
      name: Standard
      tier: Standard
      capacity: 1
    properties:
      zoneRedundant: false
      isAutoInflateEnabled: true
      maximumThroughputUnits: 20
      kafkaEnabled: true
  - name: >-
      [concat(variables('eventhub_evh_ns_high_speed_datagen_healthcare_name'),
      '/RootManageSharedAccessKey')]
    type: Microsoft.EventHub/namespaces/AuthorizationRules
    apiVersion: '2017-04-01'
    location: '[variables(''location'')]'
    dependsOn:
      - >-
        [resourceId('Microsoft.EventHub/namespaces',
        variables('eventhub_evh_ns_high_speed_datagen_healthcare_name'))]
    properties:
      rights:
        - Listen
        - Manage
        - Send
  - name: >-
      [concat(variables('eventhub_evh_ns_high_speed_datagen_healthcare_name'),
      '/evh-high-speed-datagen-healthcare')]
    type: Microsoft.EventHub/namespaces/eventhubs
    apiVersion: '2017-04-01'
    location: '[variables(''location'')]'
    dependsOn:
      - >-
        [resourceId('Microsoft.EventHub/namespaces',
        variables('eventhub_evh_ns_high_speed_datagen_healthcare_name'))]
    properties:
      messageRetentionInDays: 1
      partitionCount: 2
      status: Active
  - name: >-
      [concat(variables('eventhub_evh_ns_high_speed_datagen_healthcare_name'),
      '/default')]
    type: Microsoft.EventHub/namespaces/networkRuleSets
    apiVersion: 2018-01-01-preview
    location: '[variables(''location'')]'
    dependsOn:
      - >-
        [resourceId('Microsoft.EventHub/namespaces',
        variables('eventhub_evh_ns_high_speed_datagen_healthcare_name'))]
    properties:
      defaultAction: Deny
      virtualNetworkRules: []
      ipRules: []
  - name: >-
      [concat(variables('eventhub_evh_ns_high_speed_datagen_healthcare_name'),
      '/evh-high-speed-datagen-healthcare/asa-policy-manage-demo')]
    type: Microsoft.EventHub/namespaces/eventhubs/authorizationRules
    apiVersion: '2017-04-01'
    location: '[variables(''location'')]'
    dependsOn:
      - >-
        [resourceId('Microsoft.EventHub/namespaces/eventhubs',
        variables('eventhub_evh_ns_high_speed_datagen_healthcare_name'),
        'evh-high-speed-datagen-healthcare')]
      - >-
        [resourceId('Microsoft.EventHub/namespaces',
        variables('eventhub_evh_ns_high_speed_datagen_healthcare_name'))]
    properties:
      rights:
        - Manage
        - Listen
        - Send
  - name: >-
      [concat(variables('eventhub_evh_ns_high_speed_datagen_healthcare_name'),
      '/evh-high-speed-datagen-healthcare/$Default')]
    type: Microsoft.EventHub/namespaces/eventhubs/consumergroups
    apiVersion: '2017-04-01'
    location: '[variables(''location'')]'
    dependsOn:
      - >-
        [resourceId('Microsoft.EventHub/namespaces/eventhubs',
        variables('eventhub_evh_ns_high_speed_datagen_healthcare_name'),
        'evh-high-speed-datagen-healthcare')]
      - >-
        [resourceId('Microsoft.EventHub/namespaces',
        variables('eventhub_evh_ns_high_speed_datagen_healthcare_name'))]
    properties: {}
  - name: '[variables(''storage_account_healthcare_name'')]'
    type: Microsoft.Storage/storageAccounts
    apiVersion: 2020-08-01-preview
    location: '[variables(''location'')]'
    sku:
      name: Standard_LRS
      tier: Standard
    kind: StorageV2
    properties:
      minimumTlsVersion: TLS1_2
      allowBlobPublicAccess: true
      networkAcls:
        bypass: AzureServices
        defaultAction: Allow
      supportsHttpsTrafficOnly: true
      encryption:
        services:
          file:
            keyType: Account
            enabled: true
          blob:
            keyType: Account
            enabled: true
        keySource: Microsoft.Storage
      accessTier: Hot
    resources:
      - type: blobServices/containers
        apiVersion: '2018-07-01'
        name: >-
          [concat('default/',
          variables('default_data_lake_storage_file_system_name'))]
        dependsOn:
          - >-
            [resourceId('Microsoft.Storage/storageAccounts',
            variables('storage_account_healthcare_name'))]
  - name: '[concat(variables(''storage_account_healthcare_name''), ''/default'')]'
    type: Microsoft.Storage/storageAccounts/blobServices
    apiVersion: 2020-08-01-preview
    dependsOn:
      - >-
        [resourceId('Microsoft.Storage/storageAccounts',
        variables('storage_account_healthcare_name'))]
    sku:
      name: Standard_LRS
      tier: Standard
    properties:
      cors:
        corsRules:
          - allowedOrigins:
              - '*'
            allowedMethods:
              - DELETE
              - GET
              - HEAD
              - MERGE
              - POST
              - OPTIONS
              - PUT
              - PATCH
            maxAgeInSeconds: 1000
            exposedHeaders:
              - '*'
            allowedHeaders:
              - '*'
      deleteRetentionPolicy:
        enabled: false
  - name: '[concat(variables(''storage_account_healthcare_name''), ''/default'')]'
    type: Microsoft.Storage/storageAccounts/queueServices
    apiVersion: 2020-08-01-preview
    dependsOn:
      - >-
        [resourceId('Microsoft.Storage/storageAccounts',
        variables('storage_account_healthcare_name'))]
    properties:
      cors:
        corsRules: []
  - name: '[concat(variables(''storage_account_healthcare_name''), ''/default'')]'
    type: Microsoft.Storage/storageAccounts/tableServices
    apiVersion: 2020-08-01-preview
    dependsOn:
      - >-
        [resourceId('Microsoft.Storage/storageAccounts',
        variables('storage_account_healthcare_name'))]
    properties:
      cors:
        corsRules: []
  - name: >-
      [concat(variables('storage_account_healthcare_name'),
      '/default/adfstagedcopytempdata')]
    type: Microsoft.Storage/storageAccounts/blobServices/containers
    apiVersion: 2020-08-01-preview
    dependsOn:
      - >-
        [resourceId('Microsoft.Storage/storageAccounts/blobServices',
        variables('storage_account_healthcare_name'), 'default')]
      - >-
        [resourceId('Microsoft.Storage/storageAccounts',
        variables('storage_account_healthcare_name'))]
    properties:
      defaultEncryptionScope: $account-encryption-key
      denyEncryptionScopeOverride: false
      publicAccess: None
  - name: >-
      [concat(variables('storage_account_healthcare_name'),
      '/default/adfstagedpolybasetempdata')]
    type: Microsoft.Storage/storageAccounts/blobServices/containers
    apiVersion: 2020-08-01-preview
    dependsOn:
      - >-
        [resourceId('Microsoft.Storage/storageAccounts/blobServices',
        variables('storage_account_healthcare_name'), 'default')]
      - >-
        [resourceId('Microsoft.Storage/storageAccounts',
        variables('storage_account_healthcare_name'))]
    properties:
      defaultEncryptionScope: $account-encryption-key
      denyEncryptionScopeOverride: false
      publicAccess: None
  - name: >-
      [concat(variables('storage_account_healthcare_name'),
      '/default/azure-webjobs-eventhub')]
    type: Microsoft.Storage/storageAccounts/blobServices/containers
    apiVersion: 2020-08-01-preview
    dependsOn:
      - >-
        [resourceId('Microsoft.Storage/storageAccounts/blobServices',
        variables('storage_account_healthcare_name'), 'default')]
      - >-
        [resourceId('Microsoft.Storage/storageAccounts',
        variables('storage_account_healthcare_name'))]
    properties:
      defaultEncryptionScope: $account-encryption-key
      denyEncryptionScopeOverride: false
      publicAccess: None
  - name: >-
      [concat(variables('storage_account_healthcare_name'),
      '/default/azure-webjobs-hosts')]
    type: Microsoft.Storage/storageAccounts/blobServices/containers
    apiVersion: 2020-08-01-preview
    dependsOn:
      - >-
        [resourceId('Microsoft.Storage/storageAccounts/blobServices',
        variables('storage_account_healthcare_name'), 'default')]
      - >-
        [resourceId('Microsoft.Storage/storageAccounts',
        variables('storage_account_healthcare_name'))]
    properties:
      defaultEncryptionScope: $account-encryption-key
      denyEncryptionScopeOverride: false
      publicAccess: None
  - name: >-
      [concat(variables('storage_account_healthcare_name'),
      '/default/azure-webjobs-secrets')]
    type: Microsoft.Storage/storageAccounts/blobServices/containers
    apiVersion: 2020-08-01-preview
    dependsOn:
      - >-
        [resourceId('Microsoft.Storage/storageAccounts/blobServices',
        variables('storage_account_healthcare_name'), 'default')]
      - >-
        [resourceId('Microsoft.Storage/storageAccounts',
        variables('storage_account_healthcare_name'))]
    properties:
      defaultEncryptionScope: $account-encryption-key
      denyEncryptionScopeOverride: false
      publicAccess: None
  - name: '[concat(variables(''storage_account_healthcare_name''), ''/default/covid'')]'
    type: Microsoft.Storage/storageAccounts/blobServices/containers
    apiVersion: 2020-08-01-preview
    dependsOn:
      - >-
        [resourceId('Microsoft.Storage/storageAccounts/blobServices',
        variables('storage_account_healthcare_name'), 'default')]
      - >-
        [resourceId('Microsoft.Storage/storageAccounts',
        variables('storage_account_healthcare_name'))]
    properties:
      defaultEncryptionScope: $account-encryption-key
      denyEncryptionScopeOverride: false
      publicAccess: None
  - name: >-
      [concat(variables('storage_account_healthcare_name'),
      '/default/covid-azureml-testimages')]
    type: Microsoft.Storage/storageAccounts/blobServices/containers
    apiVersion: 2020-08-01-preview
    dependsOn:
      - >-
        [resourceId('Microsoft.Storage/storageAccounts/blobServices',
        variables('storage_account_healthcare_name'), 'default')]
      - >-
        [resourceId('Microsoft.Storage/storageAccounts',
        variables('storage_account_healthcare_name'))]
    properties:
      defaultEncryptionScope: $account-encryption-key
      denyEncryptionScopeOverride: false
      publicAccess: Container
  - name: >-
      [concat(variables('storage_account_healthcare_name'),
      '/default/covidimages')]
    type: Microsoft.Storage/storageAccounts/blobServices/containers
    apiVersion: 2020-08-01-preview
    dependsOn:
      - >-
        [resourceId('Microsoft.Storage/storageAccounts/blobServices',
        variables('storage_account_healthcare_name'), 'default')]
      - >-
        [resourceId('Microsoft.Storage/storageAccounts',
        variables('storage_account_healthcare_name'))]
    properties:
      defaultEncryptionScope: $account-encryption-key
      denyEncryptionScopeOverride: false
      publicAccess: Blob
  - name: '[concat(variables(''storage_account_healthcare_name''), ''/default/csv'')]'
    type: Microsoft.Storage/storageAccounts/blobServices/containers
    apiVersion: 2020-08-01-preview
    dependsOn:
      - >-
        [resourceId('Microsoft.Storage/storageAccounts/blobServices',
        variables('storage_account_healthcare_name'), 'default')]
      - >-
        [resourceId('Microsoft.Storage/storageAccounts',
        variables('storage_account_healthcare_name'))]
    properties:
      defaultEncryptionScope: $account-encryption-key
      denyEncryptionScopeOverride: false
      publicAccess: Container
  - name: >-
      [concat(variables('storage_account_healthcare_name'),
      '/default/formjson')]
    type: Microsoft.Storage/storageAccounts/blobServices/containers
    apiVersion: 2020-08-01-preview
    dependsOn:
      - >-
        [resourceId('Microsoft.Storage/storageAccounts/blobServices',
        variables('storage_account_healthcare_name'), 'default')]
      - >-
        [resourceId('Microsoft.Storage/storageAccounts',
        variables('storage_account_healthcare_name'))]
    properties:
      defaultEncryptionScope: $account-encryption-key
      denyEncryptionScopeOverride: false
      publicAccess: Container
  - name: >-
      [concat(variables('storage_account_healthcare_name'),
      '/default/formrecognizer')]
    type: Microsoft.Storage/storageAccounts/blobServices/containers
    apiVersion: 2020-08-01-preview
    dependsOn:
      - >-
        [resourceId('Microsoft.Storage/storageAccounts/blobServices',
        variables('storage_account_healthcare_name'), 'default')]
      - >-
        [resourceId('Microsoft.Storage/storageAccounts',
        variables('storage_account_healthcare_name'))]
    properties:
      defaultEncryptionScope: $account-encryption-key
      denyEncryptionScopeOverride: false
      publicAccess: Container
  - name: >-
      [concat(variables('storage_account_healthcare_name'),
      '/default/formrecogv2')]
    type: Microsoft.Storage/storageAccounts/blobServices/containers
    apiVersion: 2020-08-01-preview
    dependsOn:
      - >-
        [resourceId('Microsoft.Storage/storageAccounts/blobServices',
        variables('storage_account_healthcare_name'), 'default')]
      - >-
        [resourceId('Microsoft.Storage/storageAccounts',
        variables('storage_account_healthcare_name'))]
    properties:
      defaultEncryptionScope: $account-encryption-key
      denyEncryptionScopeOverride: false
      publicAccess: Container
  - name: >-
      [concat(variables('storage_account_healthcare_name'),
      '/default/formupload')]
    type: Microsoft.Storage/storageAccounts/blobServices/containers
    apiVersion: 2020-08-01-preview
    dependsOn:
      - >-
        [resourceId('Microsoft.Storage/storageAccounts/blobServices',
        variables('storage_account_healthcare_name'), 'default')]
      - >-
        [resourceId('Microsoft.Storage/storageAccounts',
        variables('storage_account_healthcare_name'))]
    properties:
      defaultEncryptionScope: $account-encryption-key
      denyEncryptionScopeOverride: false
      publicAccess: Container
  - name: >-
      [concat(variables('storage_account_healthcare_name'),
      '/default/formuploadv2')]
    type: Microsoft.Storage/storageAccounts/blobServices/containers
    apiVersion: 2020-08-01-preview
    dependsOn:
      - >-
        [resourceId('Microsoft.Storage/storageAccounts/blobServices',
        variables('storage_account_healthcare_name'), 'default')]
      - >-
        [resourceId('Microsoft.Storage/storageAccounts',
        variables('storage_account_healthcare_name'))]
    properties:
      defaultEncryptionScope: $account-encryption-key
      denyEncryptionScopeOverride: false
      publicAccess: Container
  - name: >-
      [concat(variables('storage_account_healthcare_name'),
      '/default/funchealthformjsonoutput')]
    type: Microsoft.Storage/storageAccounts/blobServices/containers
    apiVersion: 2020-08-01-preview
    dependsOn:
      - >-
        [resourceId('Microsoft.Storage/storageAccounts/blobServices',
        variables('storage_account_healthcare_name'), 'default')]
      - >-
        [resourceId('Microsoft.Storage/storageAccounts',
        variables('storage_account_healthcare_name'))]
    properties:
      defaultEncryptionScope: $account-encryption-key
      denyEncryptionScopeOverride: false
      publicAccess: None
  - name: >-
      [concat(variables('storage_account_healthcare_name'),
      '/default/healthcare-covid-images')]
    type: Microsoft.Storage/storageAccounts/blobServices/containers
    apiVersion: 2020-08-01-preview
    dependsOn:
      - >-
        [resourceId('Microsoft.Storage/storageAccounts/blobServices',
        variables('storage_account_healthcare_name'), 'default')]
      - >-
        [resourceId('Microsoft.Storage/storageAccounts',
        variables('storage_account_healthcare_name'))]
    properties:
      defaultEncryptionScope: $account-encryption-key
      denyEncryptionScopeOverride: false
      publicAccess: Container
  - name: >-
      [concat(variables('storage_account_healthcare_name'),
      '/default/healthcareformjson')]
    type: Microsoft.Storage/storageAccounts/blobServices/containers
    apiVersion: 2020-08-01-preview
    dependsOn:
      - >-
        [resourceId('Microsoft.Storage/storageAccounts/blobServices',
        variables('storage_account_healthcare_name'), 'default')]
      - >-
        [resourceId('Microsoft.Storage/storageAccounts',
        variables('storage_account_healthcare_name'))]
    properties:
      defaultEncryptionScope: $account-encryption-key
      denyEncryptionScopeOverride: false
      publicAccess: None
  - name: >-
      [concat(variables('storage_account_healthcare_name'),
      '/default/healthcare-pcr-data-10-21-2020')]
    type: Microsoft.Storage/storageAccounts/blobServices/containers
    apiVersion: 2020-08-01-preview
    dependsOn:
      - >-
        [resourceId('Microsoft.Storage/storageAccounts/blobServices',
        variables('storage_account_healthcare_name'), 'default')]
      - >-
        [resourceId('Microsoft.Storage/storageAccounts',
        variables('storage_account_healthcare_name'))]
    properties:
      defaultEncryptionScope: $account-encryption-key
      denyEncryptionScopeOverride: false
      publicAccess: None
  - name: >-
      [concat(variables('storage_account_healthcare_name'),
      '/default/healthcare-vhd-image')]
    type: Microsoft.Storage/storageAccounts/blobServices/containers
    apiVersion: 2020-08-01-preview
    dependsOn:
      - >-
        [resourceId('Microsoft.Storage/storageAccounts/blobServices',
        variables('storage_account_healthcare_name'), 'default')]
      - >-
        [resourceId('Microsoft.Storage/storageAccounts',
        variables('storage_account_healthcare_name'))]
    properties:
      defaultEncryptionScope: $account-encryption-key
      denyEncryptionScopeOverride: false
      publicAccess: None
  - name: >-
      [concat(variables('storage_account_healthcare_name'),
      '/default/iotparquetstorage')]
    type: Microsoft.Storage/storageAccounts/blobServices/containers
    apiVersion: 2020-08-01-preview
    dependsOn:
      - >-
        [resourceId('Microsoft.Storage/storageAccounts/blobServices',
        variables('storage_account_healthcare_name'), 'default')]
      - >-
        [resourceId('Microsoft.Storage/storageAccounts',
        variables('storage_account_healthcare_name'))]
    properties:
      defaultEncryptionScope: $account-encryption-key
      denyEncryptionScopeOverride: false
      publicAccess: None
  - name: >-
      [concat(variables('storage_account_healthcare_name'),
      '/default/outcontainer')]
    type: Microsoft.Storage/storageAccounts/blobServices/containers
    apiVersion: 2020-08-01-preview
    dependsOn:
      - >-
        [resourceId('Microsoft.Storage/storageAccounts/blobServices',
        variables('storage_account_healthcare_name'), 'default')]
      - >-
        [resourceId('Microsoft.Storage/storageAccounts',
        variables('storage_account_healthcare_name'))]
    properties:
      defaultEncryptionScope: $account-encryption-key
      denyEncryptionScopeOverride: false
      publicAccess: None
  - name: >-
      [concat(variables('storage_account_healthcare_name'),
      '/default/powerapps')]
    type: Microsoft.Storage/storageAccounts/blobServices/containers
    apiVersion: 2020-08-01-preview
    dependsOn:
      - >-
        [resourceId('Microsoft.Storage/storageAccounts/blobServices',
        variables('storage_account_healthcare_name'), 'default')]
      - >-
        [resourceId('Microsoft.Storage/storageAccounts',
        variables('storage_account_healthcare_name'))]
    properties:
      defaultEncryptionScope: $account-encryption-key
      denyEncryptionScopeOverride: false
      publicAccess: Blob
  - name: >-
      [concat(variables('storage_account_healthcare_name'),
      '/default/ppecompliancedetection')]
    type: Microsoft.Storage/storageAccounts/blobServices/containers
    apiVersion: 2020-08-01-preview
    dependsOn:
      - >-
        [resourceId('Microsoft.Storage/storageAccounts/blobServices',
        variables('storage_account_healthcare_name'), 'default')]
      - >-
        [resourceId('Microsoft.Storage/storageAccounts',
        variables('storage_account_healthcare_name'))]
    properties:
      defaultEncryptionScope: $account-encryption-key
      denyEncryptionScopeOverride: false
      publicAccess: Container
  - name: >-
      [concat(variables('storage_account_healthcare_name'),
      '/default/predictiveanalytics')]
    type: Microsoft.Storage/storageAccounts/blobServices/containers
    apiVersion: 2020-08-01-preview
    dependsOn:
      - >-
        [resourceId('Microsoft.Storage/storageAccounts/blobServices',
        variables('storage_account_healthcare_name'), 'default')]
      - >-
        [resourceId('Microsoft.Storage/storageAccounts',
        variables('storage_account_healthcare_name'))]
    properties:
      defaultEncryptionScope: $account-encryption-key
      denyEncryptionScopeOverride: false
      publicAccess: None
  - name: >-
      [concat(variables('storage_account_healthcare_name'),
      '/default/sqldw-994d7196-701e-4e42-824b-e2c4ced4bfa7')]
    type: Microsoft.Storage/storageAccounts/blobServices/containers
    apiVersion: 2020-08-01-preview
    dependsOn:
      - >-
        [resourceId('Microsoft.Storage/storageAccounts/blobServices',
        variables('storage_account_healthcare_name'), 'default')]
      - >-
        [resourceId('Microsoft.Storage/storageAccounts',
        variables('storage_account_healthcare_name'))]
    properties:
      defaultEncryptionScope: $account-encryption-key
      denyEncryptionScopeOverride: false
      publicAccess: None
  - name: >-
      [concat(variables('storage_account_healthcare_name'),
      '/default/synthea-data')]
    type: Microsoft.Storage/storageAccounts/blobServices/containers
    apiVersion: 2020-08-01-preview
    dependsOn:
      - >-
        [resourceId('Microsoft.Storage/storageAccounts/blobServices',
        variables('storage_account_healthcare_name'), 'default')]
      - >-
        [resourceId('Microsoft.Storage/storageAccounts',
        variables('storage_account_healthcare_name'))]
    properties:
      defaultEncryptionScope: $account-encryption-key
      denyEncryptionScopeOverride: false
      publicAccess: None
  - name: >-
      [concat(variables('storage_account_healthcare_name'),
      '/default/syntheadata-billionrows')]
    type: Microsoft.Storage/storageAccounts/blobServices/containers
    apiVersion: 2020-08-01-preview
    dependsOn:
      - >-
        [resourceId('Microsoft.Storage/storageAccounts/blobServices',
        variables('storage_account_healthcare_name'), 'default')]
      - >-
        [resourceId('Microsoft.Storage/storageAccounts',
        variables('storage_account_healthcare_name'))]
    properties:
      defaultEncryptionScope: $account-encryption-key
      denyEncryptionScopeOverride: false
      publicAccess: None
  - name: >-
      [concat(variables('storage_account_healthcare_name'),
      '/default/webappassets')]
    type: Microsoft.Storage/storageAccounts/blobServices/containers
    apiVersion: 2020-08-01-preview
    dependsOn:
      - >-
        [resourceId('Microsoft.Storage/storageAccounts/blobServices',
        variables('storage_account_healthcare_name'), 'default')]
      - >-
        [resourceId('Microsoft.Storage/storageAccounts',
        variables('storage_account_healthcare_name'))]
    properties:
      defaultEncryptionScope: $account-encryption-key
      denyEncryptionScopeOverride: false
      publicAccess: Container
  - name: >-
      [concat(variables('storage_account_healthcare_name'),
      '/default/asasqldw66e881e4fe954d7086059180809f45ff')]
    type: Microsoft.Storage/storageAccounts/tableServices/tables
    apiVersion: 2020-08-01-preview
    dependsOn:
      - >-
        [resourceId('Microsoft.Storage/storageAccounts/tableServices',
        variables('storage_account_healthcare_name'), 'default')]
      - >-
        [resourceId('Microsoft.Storage/storageAccounts',
        variables('storage_account_healthcare_name'))]
  - name: >-
      [concat(variables('storage_account_healthcare_name'),
      '/default/asasqldwcheckpoint66e881e4fe954d7086059180809f45ff')]
    type: Microsoft.Storage/storageAccounts/tableServices/tables
    apiVersion: 2020-08-01-preview
    dependsOn:
      - >-
        [resourceId('Microsoft.Storage/storageAccounts/tableServices',
        variables('storage_account_healthcare_name'), 'default')]
      - >-
        [resourceId('Microsoft.Storage/storageAccounts',
        variables('storage_account_healthcare_name'))]
  - name: >-
      [concat(variables('storage_account_healthcare_name'),
      '/default/covidanalysis')]
    type: Microsoft.Storage/storageAccounts/blobServices/containers
    apiVersion: 2020-08-01-preview
    dependsOn:
      - >-
        [resourceId('Microsoft.Storage/storageAccounts/blobServices', 
        variables('storage_account_healthcare_name'), 'default')]
      - >-
        [resourceId('Microsoft.Storage/storageAccounts', 
        variables('storage_account_healthcare_name'))]
    properties:
      defaultEncryptionScope: $account-encryption-key
      denyEncryptionScopeOverride: false
      publicAccess: Container
  - name: >-
      [concat( variables('storage_account_healthcare_name'),
      '/default/covid-crmdata')]
    type: Microsoft.Storage/storageAccounts/blobServices/containers
    apiVersion: 2020-08-01-preview
    dependsOn:
      - >-
        [resourceId('Microsoft.Storage/storageAccounts/blobServices', 
        variables('storage_account_healthcare_name'), 'default')]
      - >-
        [resourceId('Microsoft.Storage/storageAccounts', 
        variables('storage_account_healthcare_name'))]
    properties:
      defaultEncryptionScope: $account-encryption-key
      denyEncryptionScopeOverride: false
      publicAccess: Container
  - name: >-
      [concat( variables('storage_account_healthcare_name'),
      '/default/healthcare')]
    type: Microsoft.Storage/storageAccounts/blobServices/containers
    apiVersion: 2020-08-01-preview
    dependsOn:
      - >-
        [resourceId('Microsoft.Storage/storageAccounts/blobServices', 
        variables('storage_account_healthcare_name'), 'default')]
      - >-
        [resourceId('Microsoft.Storage/storageAccounts', 
        variables('storage_account_healthcare_name'))]
    properties:
      defaultEncryptionScope: $account-encryption-key
      denyEncryptionScopeOverride: false
      publicAccess: Container
  - name: >-
      [concat( variables('storage_account_healthcare_name'),
      '/default/iomt-data')]
    type: Microsoft.Storage/storageAccounts/blobServices/containers
    apiVersion: 2020-08-01-preview
    dependsOn:
      - >-
        [resourceId('Microsoft.Storage/storageAccounts/blobServices', 
        variables('storage_account_healthcare_name'), 'default')]
      - >-
        [resourceId('Microsoft.Storage/storageAccounts', 
        variables('storage_account_healthcare_name'))]
    properties:
      defaultEncryptionScope: $account-encryption-key
      denyEncryptionScopeOverride: false
      publicAccess: Container
  - name: >-
      [concat( variables('storage_account_healthcare_name'),
      '/default/marketingdata')]
    type: Microsoft.Storage/storageAccounts/blobServices/containers
    apiVersion: 2020-08-01-preview
    dependsOn:
      - >-
        [resourceId('Microsoft.Storage/storageAccounts/blobServices', 
        variables('storage_account_healthcare_name'), 'default')]
      - >-
        [resourceId('Microsoft.Storage/storageAccounts', 
        variables('storage_account_healthcare_name'))]
    properties:
      defaultEncryptionScope: $account-encryption-key
      denyEncryptionScopeOverride: false
      publicAccess: Container
  - name: >-
      [concat( variables('storage_account_healthcare_name'),
      '/default/operational-data')]
    type: Microsoft.Storage/storageAccounts/blobServices/containers
    apiVersion: 2020-08-01-preview
    dependsOn:
      - >-
        [resourceId('Microsoft.Storage/storageAccounts/blobServices', 
        variables('storage_account_healthcare_name'), 'default')]
      - >-
        [resourceId('Microsoft.Storage/storageAccounts', 
        variables('storage_account_healthcare_name'))]
    properties:
      defaultEncryptionScope: $account-encryption-key
      denyEncryptionScopeOverride: false
      publicAccess: Container
  - name: >-
      [concat( variables('storage_account_healthcare_name'),
      '/default/pcrdata')]
    type: Microsoft.Storage/storageAccounts/blobServices/containers
    apiVersion: 2020-08-01-preview
    dependsOn:
      - >-
        [resourceId('Microsoft.Storage/storageAccounts/blobServices', 
        variables('storage_account_healthcare_name'), 'default')]
      - >-
        [resourceId('Microsoft.Storage/storageAccounts', 
        variables('storage_account_healthcare_name'))]
    properties:
      defaultEncryptionScope: $account-encryption-key
      denyEncryptionScopeOverride: false
      publicAccess: Container
  - name: >-
      [concat( variables('storage_account_healthcare_name'),
      '/default/saphana-finance-data')]
    type: Microsoft.Storage/storageAccounts/blobServices/containers
    apiVersion: 2020-08-01-preview
    dependsOn:
      - >-
        [resourceId('Microsoft.Storage/storageAccounts/blobServices', 
        variables('storage_account_healthcare_name'), 'default')]
      - >-
        [resourceId('Microsoft.Storage/storageAccounts', 
        variables('storage_account_healthcare_name'))]
    properties:
      defaultEncryptionScope: $account-encryption-key
      denyEncryptionScopeOverride: false
      publicAccess: Container
  - name: >-
      [concat( variables('storage_account_healthcare_name'),
      '/default/sqldw-3420ae59-9dd4-4d7f-b1ea-b16ca7c3aa37')]
    type: Microsoft.Storage/storageAccounts/blobServices/containers
    apiVersion: 2020-08-01-preview
    dependsOn:
      - >-
        [resourceId('Microsoft.Storage/storageAccounts/blobServices', 
        variables('storage_account_healthcare_name'), 'default')]
      - >-
        [resourceId('Microsoft.Storage/storageAccounts', 
        variables('storage_account_healthcare_name'))]
    properties:
      defaultEncryptionScope: $account-encryption-key
      denyEncryptionScopeOverride: false
      publicAccess: Container
  - name: >-
      [concat( variables('storage_account_healthcare_name'),
      '/default/twitter-data')]
    type: Microsoft.Storage/storageAccounts/blobServices/containers
    apiVersion: 2020-08-01-preview
    dependsOn:
      - >-
        [resourceId('Microsoft.Storage/storageAccounts/blobServices', 
        variables('storage_account_healthcare_name'), 'default')]
      - >-
        [resourceId('Microsoft.Storage/storageAccounts', 
        variables('storage_account_healthcare_name'))]
    properties:
      defaultEncryptionScope: $account-encryption-key
      denyEncryptionScopeOverride: false
      publicAccess: Container
  - name: >-
      [concat( variables('storage_account_healthcare_name'),
      '/default/healthcare-assets')]
    type: Microsoft.Storage/storageAccounts/blobServices/containers
    apiVersion: 2020-08-01-preview
    dependsOn:
      - >-
        [resourceId('Microsoft.Storage/storageAccounts/blobServices', 
        variables('storage_account_healthcare_name'), 'default')]
      - >-
        [resourceId('Microsoft.Storage/storageAccounts', 
        variables('storage_account_healthcare_name'))]
    properties:
      defaultEncryptionScope: $account-encryption-key
      denyEncryptionScopeOverride: false
      publicAccess: Container
  - name: >-
      [concat( variables('storage_account_healthcare_name'),
      '/default/asasqldw4679bda81c2443b68860bbe3d1a84c04')]
    type: Microsoft.Storage/storageAccounts/tableServices/tables
    apiVersion: 2020-08-01-preview
    dependsOn:
      - >-
        [resourceId('Microsoft.Storage/storageAccounts/tableServices', 
        variables('storage_account_healthcare_name'), 'default')]
      - >-
        [resourceId('Microsoft.Storage/storageAccounts', 
        variables('storage_account_healthcare_name'))]
  - name: >-
      [concat( variables('storage_account_healthcare_name'),
      '/default/asasqldw58b450153e4a4dfb9b59111436260ff0')]
    type: Microsoft.Storage/storageAccounts/tableServices/tables
    apiVersion: 2020-08-01-preview
    dependsOn:
      - >-
        [resourceId('Microsoft.Storage/storageAccounts/tableServices', 
        variables('storage_account_healthcare_name'), 'default')]
      - >-
        [resourceId('Microsoft.Storage/storageAccounts', 
        variables('storage_account_healthcare_name'))]
  - name: >-
      [concat( variables('storage_account_healthcare_name'),
      '/default/asasqldw7abfc754acf8490688b8e008ac379106')]
    type: Microsoft.Storage/storageAccounts/tableServices/tables
    apiVersion: 2020-08-01-preview
    dependsOn:
      - >-
        [resourceId('Microsoft.Storage/storageAccounts/tableServices', 
        variables('storage_account_healthcare_name'), 'default')]
      - >-
        [resourceId('Microsoft.Storage/storageAccounts', 
        variables('storage_account_healthcare_name'))]
  - name: >-
      [concat( variables('storage_account_healthcare_name'),
      '/default/asasqldwb90efe9d21bc48ff8c42c991b68fee8b')]
    type: Microsoft.Storage/storageAccounts/tableServices/tables
    apiVersion: 2020-08-01-preview
    dependsOn:
      - >-
        [resourceId('Microsoft.Storage/storageAccounts/tableServices', 
        variables('storage_account_healthcare_name'), 'default')]
      - >-
        [resourceId('Microsoft.Storage/storageAccounts', 
        variables('storage_account_healthcare_name'))]
  - name: >-
      [concat( variables('storage_account_healthcare_name'),
      '/default/asasqldwcheckpoint4679bda81c2443b68860bbe3d1a84c04')]
    type: Microsoft.Storage/storageAccounts/tableServices/tables
    apiVersion: 2020-08-01-preview
    dependsOn:
      - >-
        [resourceId('Microsoft.Storage/storageAccounts/tableServices', 
        variables('storage_account_healthcare_name'), 'default')]
      - >-
        [resourceId('Microsoft.Storage/storageAccounts', 
        variables('storage_account_healthcare_name'))]
  - name: >-
      [concat( variables('storage_account_healthcare_name'),
      '/default/asasqldwcheckpoint58b450153e4a4dfb9b59111436260ff0')]
    type: Microsoft.Storage/storageAccounts/tableServices/tables
    apiVersion: 2020-08-01-preview
    dependsOn:
      - >-
        [resourceId('Microsoft.Storage/storageAccounts/tableServices', 
        variables('storage_account_healthcare_name'), 'default')]
      - >-
        [resourceId('Microsoft.Storage/storageAccounts', 
        variables('storage_account_healthcare_name'))]
  - name: >-
      [concat( variables('storage_account_healthcare_name'),
      '/default/asasqldwcheckpoint7abfc754acf8490688b8e008ac379106')]
    type: Microsoft.Storage/storageAccounts/tableServices/tables
    apiVersion: 2020-08-01-preview
    dependsOn:
      - >-
        [resourceId('Microsoft.Storage/storageAccounts/tableServices', 
        variables('storage_account_healthcare_name'), 'default')]
      - >-
        [resourceId('Microsoft.Storage/storageAccounts', 
        variables('storage_account_healthcare_name'))]
  - name: >-
      [concat( variables('storage_account_healthcare_name'),
      '/default/asasqldwcheckpointb90efe9d21bc48ff8c42c991b68fee8b')]
    type: Microsoft.Storage/storageAccounts/tableServices/tables
    apiVersion: 2020-08-01-preview
    dependsOn:
      - >-
        [resourceId('Microsoft.Storage/storageAccounts/tableServices', 
        variables('storage_account_healthcare_name'), 'default')]
      - >-
        [resourceId('Microsoft.Storage/storageAccounts', 
        variables('storage_account_healthcare_name'))]
  - name: >-
      [concat( variables('storage_account_healthcare_name'),
      '/default/asasqldwcheckpointd247a0097b594e87bf62f0b6d66b6bf0')]
    type: Microsoft.Storage/storageAccounts/tableServices/tables
    apiVersion: 2020-08-01-preview
    dependsOn:
      - >-
        [resourceId('Microsoft.Storage/storageAccounts/tableServices', 
        variables('storage_account_healthcare_name'), 'default')]
      - >-
        [resourceId('Microsoft.Storage/storageAccounts', 
        variables('storage_account_healthcare_name'))]
  - name: >-
      [concat( variables('storage_account_healthcare_name'),
      '/default/asasqldwcheckpointe7d3663214eb4cbe85969041b85c1eb6')]
    type: Microsoft.Storage/storageAccounts/tableServices/tables
    apiVersion: 2020-08-01-preview
    dependsOn:
      - >-
        [resourceId('Microsoft.Storage/storageAccounts/tableServices', 
        variables('storage_account_healthcare_name'), 'default')]
      - >-
        [resourceId('Microsoft.Storage/storageAccounts', 
        variables('storage_account_healthcare_name'))]
  - name: >-
      [concat( variables('storage_account_healthcare_name'),
      '/default/asasqldwcheckpointf57c9bfd9ca34daf9ba91f064bc25b6f')]
    type: Microsoft.Storage/storageAccounts/tableServices/tables
    apiVersion: 2020-08-01-preview
    dependsOn:
      - >-
        [resourceId('Microsoft.Storage/storageAccounts/tableServices', 
        variables('storage_account_healthcare_name'), 'default')]
      - >-
        [resourceId('Microsoft.Storage/storageAccounts', 
        variables('storage_account_healthcare_name'))]
  - name: >-
      [concat( variables('storage_account_healthcare_name'),
      '/default/asasqldwd247a0097b594e87bf62f0b6d66b6bf0')]
    type: Microsoft.Storage/storageAccounts/tableServices/tables
    apiVersion: 2020-08-01-preview
    dependsOn:
      - >-
        [resourceId('Microsoft.Storage/storageAccounts/tableServices', 
        variables('storage_account_healthcare_name'), 'default')]
      - >-
        [resourceId('Microsoft.Storage/storageAccounts', 
        variables('storage_account_healthcare_name'))]
  - name: >-
      [concat( variables('storage_account_healthcare_name'),
      '/default/asasqldwe7d3663214eb4cbe85969041b85c1eb6')]
    type: Microsoft.Storage/storageAccounts/tableServices/tables
    apiVersion: 2020-08-01-preview
    dependsOn:
      - >-
        [resourceId('Microsoft.Storage/storageAccounts/tableServices', 
        variables('storage_account_healthcare_name'), 'default')]
      - >-
        [resourceId('Microsoft.Storage/storageAccounts', 
        variables('storage_account_healthcare_name'))]
  - name: >-
      [concat( variables('storage_account_healthcare_name'),
      '/default/asasqldwf57c9bfd9ca34daf9ba91f064bc25b6f')]
    type: Microsoft.Storage/storageAccounts/tableServices/tables
    apiVersion: 2020-08-01-preview
    dependsOn:
      - >-
        [resourceId('Microsoft.Storage/storageAccounts/tableServices', 
        variables('storage_account_healthcare_name'), 'default')]
      - >-
        [resourceId('Microsoft.Storage/storageAccounts', 
        variables('storage_account_healthcare_name'))]
  - name: >-
      [concat(variables('storage_account_healthcare_name'),
      '/default/hospitaldata')]
    type: Microsoft.Storage/storageAccounts/blobServices/containers
    apiVersion: 2020-08-01-preview
    dependsOn:
      - >-
        [resourceId('Microsoft.Storage/storageAccounts/blobServices',
        variables('storage_account_healthcare_name'), 'default')]
      - >-
        [resourceId('Microsoft.Storage/storageAccounts',
        variables('storage_account_healthcare_name'))]
    properties:
      defaultEncryptionScope: $account-encryption-key
      denyEncryptionScopeOverride: false
      publicAccess: Container
  - name: >-
      [concat(variables('storage_account_healthcare_name'),
      '/default/hospitalincidentkdm')]
    type: Microsoft.Storage/storageAccounts/blobServices/containers
    apiVersion: 2020-08-01-preview
    dependsOn:
      - >-
        [resourceId('Microsoft.Storage/storageAccounts/blobServices',
        variables('storage_account_healthcare_name'), 'default')]
      - >-
        [resourceId('Microsoft.Storage/storageAccounts',
        variables('storage_account_healthcare_name'))]
    properties:
      defaultEncryptionScope: $account-encryption-key
      denyEncryptionScopeOverride: false
      publicAccess: Container
  - name: >-
      [concat(variables('storage_account_healthcare_name'),
      '/default/hospitalincidentsearch-skillset-image-projection')]
    type: Microsoft.Storage/storageAccounts/blobServices/containers
    apiVersion: 2020-08-01-preview
    dependsOn:
      - >-
        [resourceId('Microsoft.Storage/storageAccounts/blobServices',
        variables('storage_account_healthcare_name'), 'default')]
      - >-
        [resourceId('Microsoft.Storage/storageAccounts',
        variables('storage_account_healthcare_name'))]
    properties:
      defaultEncryptionScope: $account-encryption-key
      denyEncryptionScopeOverride: false
      publicAccess: Container
  - name: >-
      [concat(variables('storage_account_healthcare_name'),
      '/default/form-datasets')]
    type: Microsoft.Storage/storageAccounts/blobServices/containers
    apiVersion: 2020-08-01-preview
    dependsOn:
      - >-
        [resourceId('Microsoft.Storage/storageAccounts/blobServices',
        variables('storage_account_healthcare_name'), 'default')]
      - >-
        [resourceId('Microsoft.Storage/storageAccounts',
        variables('storage_account_healthcare_name'))]
    properties:
      defaultEncryptionScope: $account-encryption-key
      denyEncryptionScopeOverride: false
      publicAccess: Container
  - name: >-
      [concat(variables('storage_account_healthcare_name'),
      '/default/formrecoglog')]
    type: Microsoft.Storage/storageAccounts/blobServices/containers
    apiVersion: 2020-08-01-preview
    dependsOn:
      - >-
        [resourceId('Microsoft.Storage/storageAccounts/blobServices',
        variables('storage_account_healthcare_name'), 'default')]
      - >-
        [resourceId('Microsoft.Storage/storageAccounts',
        variables('storage_account_healthcare_name'))]
    properties:
      defaultEncryptionScope: $account-encryption-key
      denyEncryptionScopeOverride: false
      publicAccess: Container
  - name: >-
      [concat(variables('storage_account_healthcare_name'),
      '/default/formrecogoutput')]
    type: Microsoft.Storage/storageAccounts/blobServices/containers
    apiVersion: 2020-08-01-preview
    dependsOn:
      - >-
        [resourceId('Microsoft.Storage/storageAccounts/blobServices',
        variables('storage_account_healthcare_name'), 'default')]
      - >-
        [resourceId('Microsoft.Storage/storageAccounts',
        variables('storage_account_healthcare_name'))]
    properties:
      defaultEncryptionScope: $account-encryption-key
      denyEncryptionScopeOverride: false
      publicAccess: Container
  - name: >-
      [concat(variables('storage_account_healthcare_name'),
      '/default/incidentreport')]
    type: Microsoft.Storage/storageAccounts/blobServices/containers
    apiVersion: 2020-08-01-preview
    dependsOn:
      - >-
        [resourceId('Microsoft.Storage/storageAccounts/blobServices',
        variables('storage_account_healthcare_name'), 'default')]
      - >-
        [resourceId('Microsoft.Storage/storageAccounts',
        variables('storage_account_healthcare_name'))]
    properties:
      defaultEncryptionScope: $account-encryption-key
      denyEncryptionScopeOverride: false
      publicAccess: Container
  - name: >-
      [concat(variables('storage_account_healthcare_name'),
      '/default/customcsv')]
    type: Microsoft.Storage/storageAccounts/blobServices/containers
    apiVersion: 2020-08-01-preview
    dependsOn:
      - >-
        [resourceId('Microsoft.Storage/storageAccounts/blobServices',
        variables('storage_account_healthcare_name'), 'default')]
      - >-
        [resourceId('Microsoft.Storage/storageAccounts',
        variables('storage_account_healthcare_name'))]
    properties:
      defaultEncryptionScope: $account-encryption-key
      denyEncryptionScopeOverride: false
      publicAccess: Container
  - name: >-
      [concat(variables('storage_account_healthcare_name'),
      '/default/hospitalincidentsearchSkillsetDocument')]
    type: Microsoft.Storage/storageAccounts/tableServices/tables
    apiVersion: 2020-08-01-preview
    dependsOn:
      - >-
        [resourceId('Microsoft.Storage/storageAccounts/tableServices',
        variables('storage_account_healthcare_name'), 'default')]
      - >-
        [resourceId('Microsoft.Storage/storageAccounts',
        variables('storage_account_healthcare_name'))]
  - name: >-
      [concat(variables('storage_account_healthcare_name'),
      '/default/hospitalincidentsearchSkillsetEntities')]
    type: Microsoft.Storage/storageAccounts/tableServices/tables
    apiVersion: 2020-08-01-preview
    dependsOn:
      - >-
        [resourceId('Microsoft.Storage/storageAccounts/tableServices',
        variables('storage_account_healthcare_name'), 'default')]
      - >-
        [resourceId('Microsoft.Storage/storageAccounts',
        variables('storage_account_healthcare_name'))]
  - name: >-
      [concat(variables('storage_account_healthcare_name'),
      '/default/hospitalincidentsearchSkillsetKeyPhrases')]
    type: Microsoft.Storage/storageAccounts/tableServices/tables
    apiVersion: 2020-08-01-preview
    dependsOn:
      - >-
        [resourceId('Microsoft.Storage/storageAccounts/tableServices',
        variables('storage_account_healthcare_name'), 'default')]
      - >-
        [resourceId('Microsoft.Storage/storageAccounts',
        variables('storage_account_healthcare_name'))]
  - name: >-
      [concat(variables('storage_account_healthcare_name'),
      '/default/hospitalincidentSkillsetDocument')]
    type: Microsoft.Storage/storageAccounts/tableServices/tables
    apiVersion: 2020-08-01-preview
    dependsOn:
      - >-
        [resourceId('Microsoft.Storage/storageAccounts/tableServices',
        variables('storage_account_healthcare_name'), 'default')]
      - >-
        [resourceId('Microsoft.Storage/storageAccounts',
        variables('storage_account_healthcare_name'))]
  - name: >-
      [concat(variables('storage_account_healthcare_name'),
      '/default/hospitalincidentSkillsetEntities')]
    type: Microsoft.Storage/storageAccounts/tableServices/tables
    apiVersion: 2020-08-01-preview
    dependsOn:
      - >-
        [resourceId('Microsoft.Storage/storageAccounts/tableServices',
        variables('storage_account_healthcare_name'), 'default')]
      - >-
        [resourceId('Microsoft.Storage/storageAccounts',
        variables('storage_account_healthcare_name'))]
  - name: >-
      [concat(variables('storage_account_healthcare_name'),
      '/default/hospitalincidentSkillsetKeyPhrases')]
    type: Microsoft.Storage/storageAccounts/tableServices/tables
    apiVersion: 2020-08-01-preview
    dependsOn:
      - >-
        [resourceId('Microsoft.Storage/storageAccounts/tableServices',
        variables('storage_account_healthcare_name'), 'default')]
      - >-
        [resourceId('Microsoft.Storage/storageAccounts',
        variables('storage_account_healthcare_name'))]
  - name: '[variables(''workspace_name_synapsehealthcare'')]'
    type: Microsoft.Synapse/workspaces
    apiVersion: '2021-05-01'
    location: '[variables(''location'')]'
    dependsOn:
      - >-
        [concat('Microsoft.Storage/storageAccounts/',
        variables('storage_account_healthcare_name'),
        '/blobServices/default/containers/',
        variables('default_data_lake_storage_file_system_name'))]
    identity:
      type: SystemAssigned
    properties:
      defaultDataLakeStorage:
        accountUrl: '[variables(''default_data_lake_storage_account_url'')]'
        filesystem: '[variables(''default_data_lake_storage_file_system_name'')]'
      sqlAdministratorLogin: '[variables(''sql_administrator_login_id'')]'
      sqlAdministratorLoginPassword: '[parameters(''sql_administrator_login_password'')]'
    resources:
      - type: firewallrules
        apiVersion: '2021-05-01'
        name: allowAll
        location: '[variables(''location'')]'
        dependsOn:
          - >-
            [concat('Microsoft.Synapse/workspaces/',
            variables('workspace_name_synapsehealthcare'))]
        properties:
          startIpAddress: 0.0.0.0
          endIpAddress: 255.255.255.255
  - name: >-
      [concat(variables('workspace_name_synapsehealthcare'), '/',
      variables('spark_compute_name'))]
    type: Microsoft.Synapse/workspaces/bigDataPools
    apiVersion: '2021-05-01'
    location: '[variables(''location'')]'
    dependsOn:
      - >-
        [resourceId('Microsoft.Synapse/workspaces',
        variables('workspace_name_synapsehealthcare'))]
    properties:
      nodeCount: '[variables(''spark_node_count'')]'
      nodeSizeFamily: '[variables(''spark_node_size_family'')]'
      nodeSize: '[variables(''spark_node_size'')]'
      autoScale:
        enabled: '[variables(''spark_auto_scale_enabled'')]'
        minNodeCount: '[variables(''spark_min_node_count'')]'
        maxNodeCount: '[variables(''spark_max_node_count'')]'
      autoPause:
        enabled: '[variables(''spark_auto_pause_enabled'')]'
        delayInMinutes: '[variables(''spark_auto_pause_delay_in_minutes'')]'
      sparkVersion: '[variables(''spark_version'')]'
  - name: >-
      [concat(variables('workspace_name_synapsehealthcare'), '/',
      variables('sql_compute_name'))]
    type: Microsoft.Synapse/workspaces/sqlPools
    apiVersion: '2021-05-01'
    location: '[variables(''location'')]'
    dependsOn:
      - >-
        [concat('Microsoft.Synapse/workspaces/',
        variables('workspace_name_synapsehealthcare'))]
    sku:
      name: '[variables(''sql_server_sku'')]'
    properties:
      createMode: Default
      collation: SQL_Latin1_General_CP1_CI_AS
  - name: '[variables(''asa_healthcare_name'')]'
    type: Microsoft.StreamAnalytics/streamingjobs
    apiVersion: '2019-06-01'
    location: '[variables(''location'')]'
    dependsOn:
      - >-
        [resourceId('Microsoft.EventHub/namespaces',
        variables('eventhub_evh_namespace_healthcare_name'))]
      - >-
        [resourceId('Microsoft.Storage/storageAccounts',
        variables('storage_account_healthcare_name'))]
      - >-
        [concat('Microsoft.DocumentDB/databaseAccounts/',
        toLower(variables('cosmos_account_name_healthcare')))]
      - >-
        [resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases',variables('cosmos_account_name_healthcare'),
        variables('cosmos_database_name_healthcare'))]
    identity:
      type: SystemAssigned
    properties:
      sku:
        name: Standard
      eventsOutOfOrderPolicy: Adjust
      outputErrorPolicy: Stop
      eventsOutOfOrderMaxDelayInSeconds: 0
      eventsLateArrivalMaxDelayInSeconds: 5
      dataLocale: en-US
  - name: '[concat(variables(''asa_healthcare_name''), ''/query'')]'
    type: Microsoft.StreamAnalytics/streamingjobs/transformations
    apiVersion: '2016-03-01'
    dependsOn:
      - >-
        [concat('Microsoft.StreamAnalytics/streamingjobs/',
        variables('asa_healthcare_name'))]
    properties:
      streamingUnits: 6
      query: '[variables(''asa_healthcare_query'')]'
  - name: '[concat(variables(''asa_healthcare_name''), ''/evh-iomt-in'')]'
    type: Microsoft.StreamAnalytics/streamingjobs/inputs
    apiVersion: '2016-03-01'
    dependsOn:
      - >-
        [concat('Microsoft.StreamAnalytics/streamingjobs/',
        variables('asa_healthcare_name'))]
      - >-
        [resourceId('Microsoft.EventHub/namespaces',
        variables('eventhub_evh_namespace_healthcare_name'))]
    properties:
      type: Stream
      datasource:
        type: Microsoft.ServiceBus/EventHub
        properties:
          serviceBusNamespace: '[variables(''eventhub_evh_namespace_healthcare_name'')]'
          sharedAccessPolicyName: RootManageSharedAccessKey
          sharedAccessPolicyKey: >-
            [listkeys(resourceId('Microsoft.EventHub/namespaces/authorizationRules',
            variables('eventhub_evh_namespace_healthcare_name'),
            'RootManageSharedAccessKey'), '2017-04-01').primaryKey]
          eventHubName: evh-iomtconnector-dev
          consumerGroupName: asa-cg
          authenticationMode: ConnectionString
      serialization:
        type: Json
        properties:
          encoding: UTF8
  - name: '[concat(variables(''asa_healthcare_name''), ''/cosmos-out'')]'
    type: Microsoft.StreamAnalytics/streamingjobs/outputs
    apiVersion: 2017-04-01-preview
    dependsOn:
      - >-
        [concat('Microsoft.StreamAnalytics/streamingjobs/',
        variables('asa_healthcare_name'))]
    properties:
      datasource:
        type: Microsoft.Storage/DocumentDB
        properties:
          accountId: '[variables(''cosmos_account_name_healthcare'')]'
          accountKey: >-
            [listKeys(resourceId('Microsoft.DocumentDB/databaseAccounts',
            variables('cosmos_account_name_healthcare')),
            providers('Microsoft.DocumentDB',
            'databaseAccounts').apiVersions[0]).primaryMasterKey]
          database: '[variables(''cosmos_database_name_healthcare'')]'
          collectionNamePattern: '[variables(''cosmos_database_container_name_livedatastream'')]'
  - name: '[concat(variables(''asa_healthcare_name''), ''/powerbi-out'')]'
    type: Microsoft.StreamAnalytics/streamingjobs/outputs
    apiVersion: 2017-04-01-preview
    dependsOn:
      - >-
        [concat('Microsoft.StreamAnalytics/streamingjobs/',
        variables('asa_healthcare_name'))]
    properties:
      datasource:
        type: PowerBI
        properties:
          dataset: IoMTStreaming
          table: IoMTStreaming
          groupId: '[parameters(''pbi_workspace_id'')]'
          authenticationMode: Msi
  - name: '[concat(variables(''asa_healthcare_name''), ''/streamingPatient-out'')]'
    type: Microsoft.StreamAnalytics/streamingjobs/outputs
    apiVersion: 2017-04-01-preview
    dependsOn:
      - >-
        [concat('Microsoft.StreamAnalytics/streamingjobs/',
        variables('asa_healthcare_name'))]
    properties:
      datasource:
        type: Microsoft.Storage/Blob
        properties:
          storageAccounts:
            - accountName: '[variables(''storage_account_healthcare_name'')]'
              accountKey: >-
                [listKeys(resourceId('Microsoft.Storage/storageAccounts',variables('storage_account_healthcare_name')),'2019-04-01').keys[0].value]
          container: iotparquetstorage
          pathPattern: >-
            iot-patient/{datetime:yyyy}/{datetime:MM}/{datetime:dd}/{datetime:mm}
          dateFormat: yyyy/MM/dd
          timeFormat: HH
          authenticationMode: ConnectionString
      timeWindow: '00:01:00'
      sizeWindow: 2000
      serialization:
        type: Parquet
        properties:
          encoding: UTF8
  - name: '[variables(''asa_high_speed_data_gen_healthcare_name'')]'
    type: Microsoft.StreamAnalytics/streamingjobs
    apiVersion: '2019-06-01'
    dependsOn:
      - >-
        [resourceId('Microsoft.EventHub/namespaces',
        variables('eventhub_evh_ns_high_speed_datagen_healthcare_name'))]
      - >-
        [resourceId('Microsoft.Synapse/workspaces',
        variables('workspace_name_synapsehealthcare'))]
    location: '[variables(''location'')]'
    identity:
      type: SystemAssigned
    properties:
      sku:
        name: Standard
      eventsOutOfOrderPolicy: Adjust
      outputErrorPolicy: Stop
      eventsOutOfOrderMaxDelayInSeconds: 0
      eventsLateArrivalMaxDelayInSeconds: 5
      dataLocale: en-US
  - name: '[concat(variables(''asa_high_speed_data_gen_healthcare_name''), ''/query'')]'
    type: Microsoft.StreamAnalytics/streamingjobs/transformations
    apiVersion: '2016-03-01'
    dependsOn:
      - >-
        [concat('Microsoft.StreamAnalytics/streamingjobs/',
        variables('asa_high_speed_data_gen_healthcare_name'))]
    properties:
      streamingUnits: 6
      query: '[variables(''asa_high_speed_data_gen_healthcare_query'')]'
  - name: >-
      [concat(variables('asa_high_speed_data_gen_healthcare_name'),
      '/evh-high-speed-datagen-healthcare')]
    type: Microsoft.StreamAnalytics/streamingjobs/inputs
    apiVersion: '2016-03-01'
    dependsOn:
      - >-
        [concat('Microsoft.StreamAnalytics/streamingjobs/',
        variables('asa_high_speed_data_gen_healthcare_name'))]
      - >-
        [resourceId('Microsoft.EventHub/namespaces',
        variables('eventhub_evh_ns_high_speed_datagen_healthcare_name'))]
      - >-
        [resourceId('Microsoft.EventHub/namespaces/eventhubs',
        variables('eventhub_evh_ns_high_speed_datagen_healthcare_name'),
        'evh-high-speed-datagen-healthcare')]
    properties:
      type: Stream
      datasource:
        type: Microsoft.ServiceBus/EventHub
        properties:
          serviceBusNamespace: '[variables(''eventhub_evh_ns_high_speed_datagen_healthcare_name'')]'
          sharedAccessPolicyName: asa-policy-manage-demo
          sharedAccessPolicyKey: >-
            [listKeys(resourceId('Microsoft.EventHub/namespaces/eventhubs/authorizationRules',
            variables('eventhub_evh_ns_high_speed_datagen_healthcare_name'),
            'evh-high-speed-datagen-healthcare', 'asa-policy-manage-demo'),
            '2017-04-01').primaryKey]
          eventHubName: evh-high-speed-datagen-healthcare
          authenticationMode: ConnectionString
      serialization:
        type: Json
        properties:
          encoding: UTF8
  - name: >-
      [concat(variables('asa_high_speed_data_gen_healthcare_name'),
      '/HighSpeedStreamingAggregate')]
    type: Microsoft.StreamAnalytics/streamingjobs/outputs
    apiVersion: 2017-04-01-preview
    dependsOn:
      - >-
        [concat('Microsoft.StreamAnalytics/streamingjobs/',
        variables('asa_high_speed_data_gen_healthcare_name'))]
    properties:
      datasource:
        type: Microsoft.Sql/Server/Database
        properties:
          server: >-
            [concat(variables('workspace_name_synapsehealthcare'),'.database.windows.net')]
          database: '[variables(''sql_compute_name'')]'
          user: '[variables(''sql_administrator_login_id'')]'
          password: '[parameters(''sql_administrator_login_password'')]'
          table: HighSpeedStreamingAggregate
  - name: >-
      [concat(variables('asa_high_speed_data_gen_healthcare_name'),
      '/HighSpeedStreamingRaw')]
    type: Microsoft.StreamAnalytics/streamingjobs/outputs
    apiVersion: 2017-04-01-preview
    dependsOn:
      - >-
        [concat('Microsoft.StreamAnalytics/streamingjobs/',
        variables('asa_high_speed_data_gen_healthcare_name'))]
    properties:
      datasource:
        type: Microsoft.Sql/Server/Database
        properties:
          server: >-
            [concat(variables('workspace_name_synapsehealthcare'),'.database.windows.net')]
          database: '[variables(''sql_compute_name'')]'
          user: '[variables(''sql_administrator_login_id'')]'
          password: '[parameters(''sql_administrator_login_password'')]'
          table: HighSpeedStreamingRaw
  - name: '[variables(''func_iomt_processor_asp_name'')]'
    type: Microsoft.Web/serverfarms
    apiVersion: '2019-08-01'
    location: '[variables(''location'')]'
    sku:
      name: B1
    kind: linux
    properties:
      reserved: true
  - name: '[variables(''func_iomt_processor_storage_name'')]'
    type: Microsoft.Storage/storageAccounts
    apiVersion: '2019-04-01'
    sku:
      name: Standard_LRS
      tier: Standard
    kind: Storage
    location: '[variables(''location'')]'
    properties: {}
  - name: '[variables(''func_iomt_processor_app_name'')]'
    type: Microsoft.Web/sites
    apiVersion: '2018-11-01'
    location: '[variables(''location'')]'
    dependsOn:
      - >-
        [concat('Microsoft.Storage/storageAccounts/',
        variables('func_iomt_processor_storage_name'))]
      - >-
        [concat('Microsoft.Web/serverfarms/',
        variables('func_iomt_processor_asp_name'))]
      - >-
        [concat('Microsoft.EventHub/namespaces/',
        variables('eventhub_evh_namespace_healthcare_name'))]
      - >-
        [concat('Microsoft.DocumentDB/databaseAccounts/',
        toLower(variables('cosmos_account_name_healthcare')))]
      - >-
        [resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases',variables('cosmos_account_name_healthcare'),
        variables('cosmos_database_name_healthcare'))]
      - >-
        [concat('Microsoft.DocumentDB/databaseAccounts/',
        toLower(variables('cosmos_mongodb_account_name_healthcare')))]
      - >-
        [resourceId('Microsoft.DocumentDB/databaseAccounts/mongodbDatabases',variables('cosmos_mongodb_account_name_healthcare'),
        variables('cosmos_mongodb_database_name_healthcare'))]
    kind: functionapp
    properties:
      enabled: true
      hostNameSslStates:
        - name: >-
            [concat(variables('func_iomt_processor_app_name'),
            '.azurewebsites.net')]
          sslState: Disabled
          hostType: Standard
        - name: >-
            [concat(variables('func_iomt_processor_app_name'),
            '.scm.azurewebsites.net')]
          sslState: Disabled
          hostType: Repository
      serverFarmId: >-
        [resourceId(variables('resource_group_name'),
        'Microsoft.Web/serverfarms', variables('func_iomt_processor_asp_name'))]
      reserved: false
      siteConfig:
        netFrameworkVersion: v4.0
        appSettings:
          - name: AzureWebJobsStorage
            value: >-
              [concat('DefaultEndpointsProtocol=https;AccountName=',
              variables('func_iomt_processor_storage_name'),
              ';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts',
              variables('func_iomt_processor_storage_name')),
              '2019-04-01').keys[0].value)]
          - name: WEBSITE_CONTENTAZUREFILECONNECTIONSTRING
            value: >-
              [concat('DefaultEndpointsProtocol=https;AccountName=',
              variables('func_iomt_processor_storage_name'), ';AccountKey=',
              listKeys(resourceId('Microsoft.Storage/storageAccounts',
              variables('func_iomt_processor_storage_name')),
              '2019-04-01').keys[0].value)]
          - name: FUNCTIONS_WORKER_RUNTIME
            value: dotnet
          - name: FUNCTIONS_EXTENSION_VERSION
            value: ~2
          - name: COSMOS_PRIMARY_KEY
            value: >-
              [listKeys(resourceId('Microsoft.DocumentDB/databaseAccounts',
              variables('cosmos_account_name_healthcare')),
              providers('Microsoft.DocumentDB',
              'databaseAccounts').apiVersions[0]).primaryMasterKey]
          - name: COSMOSDB_CONTAINER_NAME
            value: '[variables(''cosmos_database_container_name_livedatastream'')]'
          - name: COSMOSDB_DATABASE_NAME
            value: '[variables(''cosmos_database_name_healthcare'')]'
          - name: COSMOSDB_ENDPOINT_URI
            value: >-
              [concat('https://',variables('cosmos_account_name_healthcare'),'.documents.azure.com:443/'
              )]
          - name: EventHubCS
            value: >-
              [listKeys(resourceId('Microsoft.EventHub/namespaces/authorizationRules',
              variables('eventhub_evh_namespace_healthcare_name'),
              'RootManageSharedAccessKey'),
              '2017-04-01').primaryConnectionString]
          - name: MONGODB_COLLECTION_NAME
            value: '[variables(''cosmos_mongodb_container_name_iomtdata'')]'
          - name: MONGODB_CONNECTION_STRING
            value: >-
              [concat('mongodb://',
              variables('cosmos_mongodb_account_name_healthcare'),
              ':',listKeys(resourceId('Microsoft.DocumentDB/databaseAccounts',
              variables('cosmos_mongodb_account_name_healthcare')),
              providers('Microsoft.DocumentDB',
              'databaseAccounts').apiVersions[0]).primaryMasterKey,'@' ,
              variables('cosmos_mongodb_account_name_healthcare'),'.mongo.cosmos.azure.com:10255/?ssl=true&replicaSet=globaldb&retrywrites=false&maxIdleTimeMS=120000&appName=@',
              variables('cosmos_mongodb_account_name_healthcare'),'@')]
          - name: MONGODB_DATABASE_NAME
            value: '[variables(''cosmos_mongodb_database_name_healthcare'')]'
          - name: PATIENT_IDS_TO_INCLUDE
            value: 0058a52a-235c-11eb-be74-70b5e8b8edbb
          - name: WEBSITE_RUN_FROM_PACKAGE
            value: 'true'
        use32BitWorkerProcess: true
        managedPipelineMode: Integrated
        cors:
          allowedOrigins:
            - https://functions.azure.com
            - https://functions-staging.azure.com
            - https://functions-next.azure.com
          supportCredentials: false
      containerSize: 1536
      httpsOnly: false
  - name: '[variables(''func_formrecognizer_asp_name'')]'
    type: Microsoft.Web/serverfarms
    apiVersion: '2018-02-01'
    location: '[variables(''location'')]'
    sku:
      name: B1
    kind: linux
    properties:
      reserved: true
  - name: '[variables(''func_formrecognizer_storage_name'')]'
    type: Microsoft.Storage/storageAccounts
    apiVersion: '2019-04-01'
    sku:
      name: Standard_LRS
      tier: Standard
    kind: Storage
    location: '[variables(''location'')]'
    properties: {}
  - name: '[variables(''func_formrecognizer_ai_name'')]'
    type: Microsoft.Insights/components
    apiVersion: 2018-05-01-preview
    location: '[variables(''location'')]'
    properties:
      Application_Type: web
      Flow_Type: Bluefield
      Request_Source: rest
  - name: '[variables(''func_formrecognizer_app_name'')]'
    type: Microsoft.Web/sites
    apiVersion: '2018-11-01'
    location: '[variables(''location'')]'
    dependsOn:
      - >-
        [concat('Microsoft.Storage/storageAccounts/',
        variables('func_formrecognizer_storage_name'))]
      - >-
        [concat('Microsoft.Web/serverfarms/',
        variables('func_formrecognizer_asp_name'))]
      - >-
        [concat('Microsoft.Insights/components/',
        variables('func_formrecognizer_ai_name'))]
    kind: functionapp
    properties:
      enabled: true
      hostNameSslStates:
        - name: >-
            [concat(variables('func_formrecognizer_app_name'),
            '.azurewebsites.net')]
          sslState: Disabled
          hostType: Standard
        - name: >-
            [concat(variables('func_formrecognizer_app_name'),
            '.scm.azurewebsites.net')]
          sslState: Disabled
          hostType: Repository
      serverFarmId: >-
        [resourceId(variables('resource_group_name'),
        'Microsoft.Web/serverfarms', variables('func_formrecognizer_asp_name'))]
      reserved: false
      siteConfig:
        netFrameworkVersion: v4.0
        appSettings:
          - name: AzureWebJobsStorage
            value: >-
              [concat('DefaultEndpointsProtocol=https;AccountName=',
              variables('func_formrecognizer_storage_name'),
              ';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts',
              variables('func_formrecognizer_storage_name')),
              '2019-04-01').keys[0].value)]
          - name: APPINSIGHTS_INSTRUMENTATIONKEY
            value: >-
              [reference(resourceId('Microsoft.Insights/components',
              variables('func_formrecognizer_ai_name'))).InstrumentationKey]
          - name: FUNCTIONS_WORKER_RUNTIME
            value: python
          - name: FUNCTION_APP_EDIT_MODE
            value: readwrite
          - name: FUNCTIONS_EXTENSION_VERSION
            value: ~2
          - name: WEBSITE_RUN_FROM_PACKAGE
            value: 'true'
        use32BitWorkerProcess: true
        managedPipelineMode: Integrated
        cors:
          allowedOrigins:
            - https://functions.azure.com
            - https://functions-staging.azure.com
            - https://functions-next.azure.com
          supportCredentials: false
      containerSize: 1536
      httpsOnly: false
  - type: Microsoft.Web/serverfarms
    apiVersion: '2020-06-01'
    name: '[variables(''func_mongo_data_asp_name'')]'
    location: '[variables(''location'')]'
    sku:
      name: B1
    kind: linux
    properties:
      reserved: true
  - name: '[variables(''func_mongo_data_storage_name'')]'
    type: Microsoft.Storage/storageAccounts
    apiVersion: '2019-04-01'
    sku:
      name: Standard_LRS
      tier: Standard
    kind: Storage
    location: '[variables(''location'')]'
    properties: {}
  - name: '[variables(''func_mongo_data_app_name'')]'
    type: Microsoft.Web/sites
    apiVersion: '2018-11-01'
    location: '[variables(''location'')]'
    dependsOn:
      - >-
        [concat('Microsoft.Storage/storageAccounts/',
        variables('func_mongo_data_storage_name'))]
      - >-
        [concat('Microsoft.Web/serverfarms/',
        variables('func_mongo_data_asp_name'))]
      - >-
        [concat('Microsoft.DocumentDB/databaseAccounts/',
        toLower(variables('cosmos_mongodb_account_name_healthcare')))]
      - >-
        [resourceId('Microsoft.DocumentDB/databaseAccounts/mongodbDatabases',variables('cosmos_mongodb_account_name_healthcare'),
        variables('cosmos_mongodb_database_name_healthcare'))]
    kind: functionapp
    properties:
      enabled: true
      hostNameSslStates:
        - name: >-
            [concat(variables('func_mongo_data_app_name'),
            '.azurewebsites.net')]
          sslState: Disabled
          hostType: Standard
        - name: >-
            [concat(variables('func_mongo_data_app_name'),
            '.scm.azurewebsites.net')]
          sslState: Disabled
          hostType: Repository
      serverFarmId: >-
        [resourceId(variables('resource_group_name'),
        'Microsoft.Web/serverfarms', variables('func_mongo_data_asp_name'))]
      reserved: false
      siteConfig:
        netFrameworkVersion: v4.0
        appSettings:
          - name: AzureWebJobsDashboard
            value: >-
              [concat('DefaultEndpointsProtocol=https;AccountName=',
              variables('func_mongo_data_storage_name'), ';AccountKey=',
              listKeys(resourceId('Microsoft.Storage/storageAccounts',
              variables('func_mongo_data_storage_name')),
              '2019-04-01').keys[0].value)]
          - name: AzureWebJobsStorage
            value: >-
              [concat('DefaultEndpointsProtocol=https;AccountName=',
              variables('func_mongo_data_storage_name'),
              ';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts',
              variables('func_mongo_data_storage_name')),
              '2019-04-01').keys[0].value)]
          - name: WEBSITE_CONTENTAZUREFILECONNECTIONSTRING
            value: >-
              [concat('DefaultEndpointsProtocol=https;AccountName=',
              variables('func_mongo_data_storage_name'), ';AccountKey=',
              listKeys(resourceId('Microsoft.Storage/storageAccounts',
              variables('func_mongo_data_storage_name')),
              '2019-04-01').keys[0].value)]
          - name: FUNCTIONS_WORKER_RUNTIME
            value: dotnet
          - name: FUNCTIONS_EXTENSION_VERSION
            value: ~2
          - name: MONGODB_COLLECTION_NAME
            value: SynapseLinkLabData
          - name: MONGODB_CONNECTION_STRING
            value: >-
              [concat('mongodb://',
              variables('cosmos_mongodb_account_name_healthcare'),
              ':',listKeys(resourceId('Microsoft.DocumentDB/databaseAccounts',
              variables('cosmos_mongodb_account_name_healthcare')),
              providers('Microsoft.DocumentDB',
              'databaseAccounts').apiVersions[0]).primaryMasterKey,'@' ,
              variables('cosmos_mongodb_account_name_healthcare'),'.mongo.cosmos.azure.com:10255/?ssl=true&replicaSet=globaldb&retrywrites=false&maxIdleTimeMS=120000&appName=@',
              variables('cosmos_mongodb_account_name_healthcare'),'@')]
          - name: MONGODB_DATABASE_NAME
            value: healthdata
          - name: WEBSITE_RUN_FROM_PACKAGE
            value: 'true'
          - name: STORAGE_CONTAINER_NAME
            value: '[variables(''source_storage_container'')]'
          - name: STORAGE_FILE_NAME
            value: MongoDbJson.json
        use32BitWorkerProcess: true
        managedPipelineMode: Integrated
        cors:
          allowedOrigins:
            - https://functions.azure.com
            - https://functions-staging.azure.com
            - https://functions-next.azure.com
          supportCredentials: false
      containerSize: 1536
      httpsOnly: false
  - type: Microsoft.Web/serverfarms
    apiVersion: '2020-06-01'
    name: '[variables(''app_iomt_simulator_ase_name'')]'
    location: '[variables(''location'')]'
    sku:
      name: B1
    kind: linux
    properties:
      reserved: true
  - type: Microsoft.Web/sites
    apiVersion: '2020-06-01'
    name: '[variables(''app_iomt_simulator_app_service_name'')]'
    location: '[variables(''location'')]'
    dependsOn:
      - >-
        [resourceId('Microsoft.Web/serverfarms',
        variables('app_iomt_simulator_ase_name'))]
    properties:
      serverFarmId: >-
        [resourceId('Microsoft.Web/serverfarms',
        variables('app_iomt_simulator_ase_name'))]
      siteConfig:
        linuxFxVersion: PYTHON|3.7
      resources:
        - condition: '[contains('' '',''http'')]'
          type: sourcecontrols
          apiVersion: '2020-06-01'
          name: web
          location: '[variables(''location'')]'
          dependsOn:
            - >-
              [resourceId('Microsoft.Web/sites',
              variables('app_iomt_simulator_app_service_name'))]
          properties:
            repoUrl: ' '
            branch: master
            isManualIntegration: true
  - name: '[variables(''app_demohealthcare_ase_name'')]'
    type: Microsoft.Web/serverfarms
    apiVersion: '2019-08-01'
    location: '[variables(''location'')]'
    sku:
      name: S1
    kind: linux
    properties:
      reserved: true
  - type: Microsoft.Web/sites
    apiVersion: '2018-11-01'
    name: '[variables(''app_demohealthcare_app_service_name'')]'
    location: '[variables(''location'')]'
    dependsOn:
      - >-
        [resourceId('Microsoft.Web/serverfarms',
        variables('app_demohealthcare_ase_name'))]
    kind: app,linux
    properties:
      enabled: true
      hostNameSslStates:
        - name: >-
            [concat(variables('app_demohealthcare_app_service_name'),
            '.azurewebsites.net')]
          sslState: Disabled
          hostType: Standard
        - name: >-
            [concat(variables('app_demohealthcare_app_service_name'),
            '.scm.azurewebsites.net')]
          sslState: Disabled
          hostType: Repository
      serverFarmId: >-
        [resourceId('Microsoft.Web/serverfarms',
        variables('app_demohealthcare_ase_name'))]
      reserved: false
      isXenon: false
      hyperV: false
      siteConfig: {}
      scmSiteAlsoStopped: false
      clientAffinityEnabled: true
      clientCertEnabled: false
      hostNamesDisabled: false
      containerSize: 0
      dailyMemoryTimeQuota: 0
      httpsOnly: true
      redundancyMode: None
  - type: Microsoft.Web/sites/config
    apiVersion: '2018-11-01'
    name: '[concat(variables(''app_demohealthcare_app_service_name''), ''/web'')]'
    location: '[variables(''location'')]'
    dependsOn:
      - >-
        [resourceId('Microsoft.Web/sites',
        variables('app_demohealthcare_app_service_name'))]
    properties:
      numberOfWorkers: 1
      defaultDocuments:
        - Default.htm
        - Default.html
        - Default.asp
        - index.htm
        - index.html
        - iisstart.htm
        - default.aspx
        - index.php
        - hostingstart.html
      netFrameworkVersion: v4.0
      linuxFxVersion: DOTNETCORE|3.1
      requestTracingEnabled: false
      remoteDebuggingEnabled: false
      httpLoggingEnabled: false
      logsDirectorySizeLimit: 35
      detailedErrorLoggingEnabled: false
      publishingUsername: '[concat(''$'', variables(''app_demohealthcare_app_service_name''))]'
      azureStorageAccounts: {}
      scmType: None
      use32BitWorkerProcess: true
      webSocketsEnabled: false
      alwaysOn: true
      managedPipelineMode: Integrated
      virtualApplications:
        - virtualPath: /
          physicalPath: site\wwwroot
          preloadEnabled: true
      loadBalancing: LeastRequests
      experiments:
        rampUpRules: []
      autoHealEnabled: false
      localMySqlEnabled: false
      ipSecurityRestrictions:
        - ipAddress: Any
          action: Allow
          priority: 1
          name: Allow all
          description: Allow all access
      scmIpSecurityRestrictions:
        - ipAddress: Any
          action: Allow
          priority: 1
          name: Allow all
          description: Allow all access
      scmIpSecurityRestrictionsUseMain: false
      http20Enabled: false
      minTlsVersion: '1.2'
      ftpsState: AllAllowed
      reservedInstanceCount: 0
  - name: '[variables(''app_healthcaresearch_ase_name'')]'
    type: Microsoft.Web/serverfarms
    apiVersion: '2019-08-01'
    location: '[variables(''location'')]'
    sku:
      name: B1
    kind: linux
    properties:
      reserved: true
  - name: '[variables(''app_healthcaresearch_app_service_name'')]'
    type: Microsoft.Web/sites
    apiVersion: '2018-11-01'
    kind: app
    location: '[variables(''location'')]'
    dependsOn:
      - >-
        [concat('Microsoft.Web/serverfarms/',
        toLower(variables('app_healthcaresearch_ase_name')))]
    properties:
      enabled: true
      hostNameSslStates:
        - name: >-
            [concat(variables('app_healthcaresearch_app_service_name'),
            '.azurewebsites.net')]
          sslState: Disabled
          hostType: Standard
        - name: >-
            [concat(variables('app_healthcaresearch_app_service_name'),
            '.scm.azurewebsites.net')]
          sslState: Disabled
          hostType: Repository
      serverFarmId: >-
        [resourceId(variables('resource_group_name'),'Microsoft.Web/serverfarms',
        variables('app_healthcaresearch_ase_name'))]
      siteConfig:
        appSettings:
          - name: APPINSIGHTS_PROFILERFEATURE_VERSION
            value: disabled
            slotSetting: false
          - name: APPINSIGHTS_SNAPSHOTFEATURE_VERSION
            value: disabled
            slotSetting: false
          - name: ApplicationInsightsAgent_EXTENSION_VERSION
            value: ~2
            slotSetting: false
          - name: DiagnosticServices_EXTENSION_VERSION
            value: disabled
            slotSetting: false
          - name: InstrumentationEngine_EXTENSION_VERSION
            value: disabled
            slotSetting: false
          - name: SnapshotDebugger_EXTENSION_VERSION
            value: disabled
            slotSetting: false
          - name: XDT_MicrosoftApplicationInsights_BaseExtensions
            value: disabled
            slotSetting: false
          - name: XDT_MicrosoftApplicationInsights_Mode
            value: recommended
            slotSetting: false
        use32BitWorkerProcess: true
        alwaysOn: true
        managedPipelineMode: Integrated
      httpsOnly: true
  - type: Microsoft.CognitiveServices/accounts
    apiVersion: '2017-04-18'
    name: '[variables(''cogs_forms_name'')]'
    location: '[variables(''location'')]'
    sku:
      name: S0
    kind: FormRecognizer
    properties:
      privateEndpointConnections: []
      publicNetworkAccess: Enabled
  - type: Microsoft.CognitiveServices/accounts
    apiVersion: '2017-04-18'
    name: '[variables(''cogs_formsv2_name'')]'
    location: '[variables(''location'')]'
    sku:
      name: S0
    kind: FormRecognizer
    properties:
      privateEndpointConnections: []
      publicNetworkAccess: Enabled
  - type: Microsoft.CognitiveServices/accounts
    apiVersion: '2017-04-18'
    name: '[variables(''cognitive_healthcare_services_name'')]'
    location: '[variables(''location'')]'
    sku:
      name: S0
    kind: CognitiveServices
    properties:
      apiProperties:
        statisticsEnabled: false
      customSubDomainName: '[variables(''cognitive_healthcare_services_name'')]'
      publicNetworkAccess: Enabled
  - type: Microsoft.CognitiveServices/accounts
    apiVersion: '2017-04-18'
    name: '[variables(''accounts_healthcareTA_name'')]'
    location: '[variables(''location'')]'
    sku:
      name: F0
    kind: TextAnalytics
    properties:
      customSubDomainName: '[variables(''accounts_healthcareTA_name'')]'
      privateEndpointConnections: []
      publicNetworkAccess: Enabled
  - type: Microsoft.CognitiveServices/accounts
    apiVersion: '2017-04-18'
    name: '[variables(''accounts_ta_healthcare_analytics_name'')]'
    location: '[variables(''location'')]'
    sku:
      name: S
    kind: TextAnalytics
    properties:
      customSubDomainName: '[variables(''accounts_ta_healthcare_analytics_name'')]'
      privateEndpointConnections: []
      publicNetworkAccess: Enabled
  - name: '[variables(''storage_account_covid19_search_name'')]'
    type: Microsoft.Storage/storageAccounts
    apiVersion: 2020-08-01-preview
    location: '[variables(''location'')]'
    sku:
      name: Standard_LRS
      tier: Standard
    kind: StorageV2
    properties:
      minimumTlsVersion: TLS1_2
      allowBlobPublicAccess: true
      networkAcls:
        bypass: AzureServices
        virtualNetworkRules: []
        ipRules: []
        defaultAction: Allow
      supportsHttpsTrafficOnly: true
      encryption:
        services:
          file:
            keyType: Account
            enabled: true
          blob:
            keyType: Account
            enabled: true
        keySource: Microsoft.Storage
      accessTier: Hot
  - name: '[concat(variables(''storage_account_covid19_search_name''), ''/default'')]'
    type: Microsoft.Storage/storageAccounts/blobServices
    apiVersion: 2020-08-01-preview
    dependsOn:
      - >-
        [resourceId('Microsoft.Storage/storageAccounts',
        variables('storage_account_covid19_search_name'))]
    sku:
      name: Standard_LRS
      tier: Standard
    properties:
      cors:
        corsRules: []
      deleteRetentionPolicy:
        enabled: false
  - name: '[concat(variables(''storage_account_covid19_search_name''), ''/default'')]'
    type: Microsoft.Storage/storageAccounts/queueServices
    apiVersion: 2020-08-01-preview
    dependsOn:
      - >-
        [resourceId('Microsoft.Storage/storageAccounts',
        variables('storage_account_covid19_search_name'))]
    properties:
      cors:
        corsRules: []
  - name: '[concat(variables(''storage_account_covid19_search_name''), ''/default'')]'
    type: Microsoft.Storage/storageAccounts/tableServices
    apiVersion: 2020-08-01-preview
    dependsOn:
      - >-
        [resourceId('Microsoft.Storage/storageAccounts',
        variables('storage_account_covid19_search_name'))]
    properties:
      cors:
        corsRules: []
  - name: >-
      [concat(variables('storage_account_covid19_search_name'),
      '/default/covid19')]
    type: Microsoft.Storage/storageAccounts/blobServices/containers
    apiVersion: 2020-08-01-preview
    dependsOn:
      - >-
        [resourceId('Microsoft.Storage/storageAccounts/blobServices',
        variables('storage_account_covid19_search_name'), 'default')]
      - >-
        [resourceId('Microsoft.Storage/storageAccounts',
        variables('storage_account_covid19_search_name'))]
    properties:
      defaultEncryptionScope: $account-encryption-key
      denyEncryptionScopeOverride: false
      publicAccess: None
  - name: >-
      [concat(variables('storage_account_covid19_search_name'),
      '/default/semanticsearch')]
    type: Microsoft.Storage/storageAccounts/blobServices/containers
    apiVersion: 2020-08-01-preview
    dependsOn:
      - >-
        [resourceId('Microsoft.Storage/storageAccounts/blobServices',
        variables('storage_account_covid19_search_name'), 'default')]
      - >-
        [resourceId('Microsoft.Storage/storageAccounts',
        variables('storage_account_covid19_search_name'))]
    properties:
      defaultEncryptionScope: $account-encryption-key
      denyEncryptionScopeOverride: false
      publicAccess: None
  - type: Microsoft.Search/searchServices
    apiVersion: '2020-08-01'
    name: '[variables(''search_healthcare_demo_name'')]'
    location: '[variables(''location'')]'
    sku:
      name: basic
    properties:
      replicaCount: 1
      partitionCount: 1
      hostingMode: Default
      publicNetworkAccess: Enabled
      networkRuleSet:
        ipRules: []
  - type: Microsoft.IoTCentral/IoTApps
    apiVersion: '2018-09-01'
    name: '[variables(''iot_central_healthcare_name'')]'
    location: '[variables(''location'')]'
    sku:
      name: ST2
    properties:
      displayName: '[variables(''iot_central_healthcare_name'')]'
      subdomain: '[variables(''iot_central_healthcare_name'')]'
      template: 3041d72a-4d98-47be-b82d-123cf6b9a82e
  - type: Microsoft.KeyVault/vaults
    name: '[variables(''key_vault_name'')]'
    apiVersion: '2018-02-14'
    location: '[variables(''location'')]'
    properties:
      enabledForDeployment: true
      enabledForDiskEncryption: true
      enabledForTemplateDeployment: true
      tenantId: '[subscription().tenantId]'
      accessPolicies: []
      sku:
        name: Standard
        family: A
      networkAcls:
        defaultAction: Allow
        bypass: AzureServices
  - type: Microsoft.KeyVault/vaults/secrets
    name: '[concat(variables(''key_vault_name''), ''/SqlPassword'')]'
    apiVersion: '2018-02-14'
    location: '[variables(''location'')]'
    dependsOn:
      - '[resourceId(''Microsoft.KeyVault/vaults'', variables(''key_vault_name''))]'
    properties:
      value: '[parameters(''sql_administrator_login_password'')]'
  - name: '[variables(''virtual_machine_vnet_name'')]'
    type: Microsoft.Network/virtualNetworks
    apiVersion: '2019-11-01'
    location: '[variables(''location'')]'
    properties:
      addressSpace:
        addressPrefixes:
          - '[variables(''virtual_machine_vnet_address_prefix'')]'
      subnets:
        - name: '[variables(''virtual_machine_vnet_subnet_name'')]'
          properties:
            addressPrefix: '[variables(''virtual_machine_vnet_address_prefix'')]'
  - name: '[variables(''virtual_machine_public_ip_name'')]'
    type: Microsoft.Network/publicIPAddresses
    apiVersion: '2019-04-01'
    location: '[variables(''location'')]'
    sku:
      name: Basic
    properties:
      publicIPAllocationMethod: Static
      publicIPAddressVersion: IPv4
      dnsSettings:
        domainNameLabel: '[variables(''virtual_machine_name'')]'
  - name: '[variables(''virtual_machine_nsg_name'')]'
    type: Microsoft.Network/networkSecurityGroups
    apiVersion: '2019-11-01'
    location: '[variables(''location'')]'
    properties:
      securityRules:
        - name: default-allow-3389
          properties:
            priority: 1000
            access: Allow
            direction: Inbound
            destinationPortRange: '3389'
            protocol: Tcp
            sourcePortRange: '*'
            sourceAddressPrefix: '*'
            destinationAddressPrefix: '*'
  - name: '[variables(''virtual_machine_nic_name'')]'
    type: Microsoft.Network/networkInterfaces
    apiVersion: '2019-11-01'
    location: '[variables(''location'')]'
    dependsOn:
      - >-
        [concat('Microsoft.Network/virtualNetworks/',
        variables('virtual_machine_vnet_name'))]
      - >-
        [concat('Microsoft.Network/publicIPAddresses/',
        variables('virtual_machine_public_ip_name'))]
      - >-
        [concat('Microsoft.Network/networkSecurityGroups/',
        variables('virtual_machine_nsg_name'))]
      - >-
        [resourceId('Microsoft.EventHub/namespaces',
        variables('eventhub_evh_ns_high_speed_datagen_healthcare_name'))]
    properties:
      ipConfigurations:
        - name: ipconfig1
          properties:
            privateIPAllocationMethod: Dynamic
            publicIPAddress:
              id: >-
                [resourceId('Microsoft.Network/publicIPAddresses',
                variables('virtual_machine_public_ip_name'))]
            subnet:
              id: >-
                [resourceId('Microsoft.Network/virtualNetworks/subnets',
                variables('virtual_machine_vnet_name'),
                variables('virtual_machine_vnet_subnet_name'))]
            primary: true
            privateIPAddressVersion: IPv4
      networkSecurityGroup:
        id: >-
          [resourceId('Microsoft.Network/networkSecurityGroups',
          variables('virtual_machine_nsg_name'))]
  - name: '[variables(''virtual_machine_name'')]'
    type: Microsoft.Compute/virtualMachines
    apiVersion: '2019-07-01'
    location: '[variables(''location'')]'
    dependsOn:
      - >-
        [concat('Microsoft.Network/networkInterfaces/',
        variables('virtual_machine_nic_name'))]
      - >-
        [resourceId('Microsoft.EventHub/namespaces',
        variables('eventhub_evh_ns_high_speed_datagen_healthcare_name'))]
    properties:
      hardwareProfile:
        vmSize: '[variables(''virtual_machine_size'')]'
      osProfile:
        computerName: '[variables(''virtual_machine_name'')]'
        adminUsername: '[variables(''virtual_machine_username'')]'
        adminPassword: '[variables(''virtual_machine_password'')]'
      storageProfile:
        imageReference:
          publisher: MicrosoftWindowsServer
          offer: WindowsServer
          sku: 2016-Datacenter
          version: latest
        osDisk:
          createOption: FromImage
      networkProfile:
        networkInterfaces:
          - id: >-
              [resourceId('Microsoft.Network/networkInterfaces',
              variables('virtual_machine_nic_name'))]
      diagnosticsProfile:
        bootDiagnostics:
          enabled: false
    identity:
      type: SystemAssigned
  - name: >-
      [concat(variables('virtual_machine_name'),'/ManagedIdentityExtensionForWindows')]
    type: Microsoft.Compute/virtualMachines/extensions
    apiVersion: '2018-06-01'
    location: '[variables(''location'')]'
    dependsOn:
      - >-
        [concat('Microsoft.Compute/virtualMachines/',
        variables('virtual_machine_name'))]
    properties:
      publisher: Microsoft.ManagedIdentity
      type: ManagedIdentityExtensionForWindows
      typeHandlerVersion: '1.0'
      autoUpgradeMinorVersion: true
      settings:
        port: 50342
  - name: '[concat(variables(''virtual_machine_name''),''/installcustomscript'')]'
    type: Microsoft.Compute/virtualMachines/extensions
    apiVersion: '2019-07-01'
    location: '[variables(''location'')]'
    dependsOn:
      - >-
        [concat('Microsoft.Compute/virtualMachines/',
        variables('virtual_machine_name'))]
    properties:
      publisher: Microsoft.Compute
      type: CustomScriptExtension
      typeHandlerVersion: '1.8'
      autoUpgradeMinorVersion: true
      settings:
        fileUris:
          - >-
            https://pocaccelerator.blob.core.windows.net/healthcare-vm-assets/highspeed-datagen.zip
          - >-
            https://pocaccelerator.blob.core.windows.net/healthcare-vm-assets/vmscript.ps1
      protectedSettings:
        commandToExecute: >-
          [concat('powershell -ExecutionPolicy Unrestricted -File vmscript.ps1
          ', variables('script_args'),
          listKeys(resourceId('Microsoft.EventHub/namespaces/eventhubs/authorizationRules',
          variables('eventhub_evh_ns_high_speed_datagen_healthcare_name'),
          'evh-high-speed-datagen-healthcare', 'asa-policy-manage-demo'),
          '2017-04-01').primaryConnectionString)]
outputs: {}
